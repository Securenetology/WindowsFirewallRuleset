<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Confirm-Installation</command:name>
      <command:verb>Confirm</command:verb>
      <command:noun>Installation</command:noun>
      <maml:description>
        <maml:para>Verify or set program installation directory</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Test if given installation directory exists and is valid for firewall, and if not this method will search system for valid path and return it trough reference parameter. If the installation directory can't be determined reference variable remains unchanged.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Confirm-Installation</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Application</maml:name>
          <maml:description>
            <maml:para>Predefined program name for which to search</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Psiphon</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSI</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeWebView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">dotnet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CMake</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlPath</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlServer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlManagementStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsDefender</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NuGet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NETFramework</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">vcpkg</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SysInternals</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsKits</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WebPlatform</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSpace</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XTU</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chocolatey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ArenaChess</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GoogleDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RivaTuner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Incredibuild</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColorMania</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MetaTrader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RealWorld</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AzureDataStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">qBittorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenTTD</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EveOnline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DemiseOfNations</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CounterStrikeGO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PinballArcade</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaUpdate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaRuntime</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeARM</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeReader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeAcrobat</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LoLGame</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FileZilla</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PathOfExile</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HWMonitor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CPUZ</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSIAfterburner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GPG</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OBSStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PasswordSafe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Greenshot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DnsCrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSSH</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellCore64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OneDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HelpViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VSCode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MicrosoftOffice</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TeamViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeChromium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chrome</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Firefox</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yandex</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Tor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">uTorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thuderbird</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Steam</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GeForceExperience</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WarThunder</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PokerStars</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudioInstaller</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSYS2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Git</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GitHubDesktop</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EpicGames</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UnrealEngine</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BingWallpaper</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TargetProgram</command:parameterValue>
          <dev:type>
            <maml:name>TargetProgram</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Directory</maml:name>
          <maml:description>
            <maml:para>Reference to variable which should be updated with the path to program installation directory excluding executable file name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSReference</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSReference</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which to verify for program installation</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Interactive</maml:name>
          <maml:description>
            <maml:para>If requested program installation directory is not found, Confirm-Installation will ask user to specify program installation location.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, it suppresses warning, error or informationall messages if user specified or default program installation directory path does not exist or if it's of an invalid syntax needed for firewall.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Confirm-Installation</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Application</maml:name>
          <maml:description>
            <maml:para>Predefined program name for which to search</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Psiphon</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSI</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeWebView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">dotnet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CMake</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlPath</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlServer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlManagementStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsDefender</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NuGet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NETFramework</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">vcpkg</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SysInternals</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsKits</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WebPlatform</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSpace</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XTU</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chocolatey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ArenaChess</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GoogleDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RivaTuner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Incredibuild</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColorMania</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MetaTrader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RealWorld</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AzureDataStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">qBittorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenTTD</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EveOnline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DemiseOfNations</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CounterStrikeGO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PinballArcade</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaUpdate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaRuntime</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeARM</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeReader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeAcrobat</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LoLGame</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FileZilla</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PathOfExile</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HWMonitor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CPUZ</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSIAfterburner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GPG</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OBSStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PasswordSafe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Greenshot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DnsCrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSSH</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellCore64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OneDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HelpViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VSCode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MicrosoftOffice</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TeamViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeChromium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chrome</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Firefox</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yandex</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Tor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">uTorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thuderbird</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Steam</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GeForceExperience</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WarThunder</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PokerStars</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudioInstaller</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSYS2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Git</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GitHubDesktop</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EpicGames</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UnrealEngine</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BingWallpaper</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TargetProgram</command:parameterValue>
          <dev:type>
            <maml:name>TargetProgram</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Directory</maml:name>
          <maml:description>
            <maml:para>Reference to variable which should be updated with the path to program installation directory excluding executable file name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSReference</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSReference</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Specifies the CIM session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Interactive</maml:name>
          <maml:description>
            <maml:para>If requested program installation directory is not found, Confirm-Installation will ask user to specify program installation location.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, it suppresses warning, error or informationall messages if user specified or default program installation directory path does not exist or if it's of an invalid syntax needed for firewall.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Application</maml:name>
        <maml:description>
          <maml:para>Predefined program name for which to search</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TargetProgram</command:parameterValue>
        <dev:type>
          <maml:name>TargetProgram</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Directory</maml:name>
        <maml:description>
          <maml:para>Reference to variable which should be updated with the path to program installation directory excluding executable file name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSReference</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSReference</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which to verify for program installation</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CimSession</maml:name>
        <maml:description>
          <maml:para>Specifies the CIM session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Interactive</maml:name>
        <maml:description>
          <maml:para>If requested program installation directory is not found, Confirm-Installation will ask user to specify program installation location.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>If specified, it suppresses warning, error or informationall messages if user specified or default program installation directory path does not exist or if it's of an invalid syntax needed for firewall.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Confirm-Installation</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool] True if the reference variable contains valid path or was updated, false otherwise.</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: ComputerName parameter is missing for remote test</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>$MyProgram = "%ProgramFiles(x86)%\Microsoft Office\root\Office16"
PS&gt; Confirm-Installation "Office" ([ref] $ProgramInstallPath)</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Confirm-Installation.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Format-Path</command:name>
      <command:verb>Format</command:verb>
      <command:noun>Path</command:noun>
      <maml:description>
        <maml:para>Format file system path and fix syntax errors</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Most path syntax errors are fixed however the path is never resolved or tested for existence. For example, relative path will stay relative and if the path location does not exist it is not created.</maml:para>
      <maml:para>Various paths drilled out of registry can be invalid and those specified manuallay may contain typos, this algorithm will attempt to correct these problems, in addition to providing consistent path output.</maml:para>
      <maml:para>If possible portion of the path is converted into system environment variable to shorten the length of a path. Formatted paths will also help sorting rules in firewall GUI based on path. Only file system paths are supported.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Format-Path</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>File system path to format, can have environment variables, or it may contain redundant or invalid characters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>File system path to format, can have environment variables, or it may contain redundant or invalid characters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[string[]] File path to format</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string] formatted path, includes environment variables, stripped off of junk</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: This should proably be in utility module, it's here since only this module uses this function.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Format-Path "C:\Program Files\WindowsPowerShell"
%ProgramFiles%\WindowsPowerShell</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Format-Path "%SystemDrive%\Windows\System32"
%SystemRoot%\System32</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Format-Path ..\dir//.\...
..\dir\.\..</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>Format-Path ~/\Direcotry//file.exe
~\Direcotry\file.exe</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>Format-Path '"C:\ProgramData\Git"'
%ALLUSERSPROFILE%\Git</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Format-Path.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AllUserProgram</command:name>
      <command:verb>Get</command:verb>
      <command:noun>AllUserProgram</command:noun>
      <maml:description>
        <maml:para>Search system wide program install properties</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Search separate location in the registry for programs installed for all users.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AllUserProgram</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name which to check</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name which to check</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-AllUserProgram</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] list of programs installed for all users</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Should be renamed to something that best describes target registry key</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-AllUserProgram</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-AllUserProgram "COMPUTERNAME"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-AllUserProgram.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AppCapability</command:name>
      <command:verb>Get</command:verb>
      <command:noun>AppCapability</command:noun>
      <maml:description>
        <maml:para>Get Windows store app capabilities</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get-AppCapability returns a list of capabilities for an app in one of the following formats: 1. Principal display name 2. Principal full reference name</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AppCapability</maml:name>
        <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PackageTypeFilter</maml:name>
          <maml:description>
            <maml:para>Specifies the type of a packages to get from the package repository.</maml:para>
            <maml:para>Valid values are: Bundle Framework Main Resource None (default)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which to run function</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>Specify user name for which to obtain store apps to query capabilities.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeAuthority</maml:name>
          <maml:description>
            <maml:para>If specified, outputs full reference name. By default only capability display name is returned.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Networking</maml:name>
          <maml:description>
            <maml:para>If specified, the result includes only networking capabilities</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AppCapability</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="App, StoreApp">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>One or more Windows store apps for which to retrieve capabilities</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which to run function</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>Specify user name for which to obtain store apps to query capabilities.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeAuthority</maml:name>
          <maml:description>
            <maml:para>If specified, outputs full reference name. By default only capability display name is returned.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Networking</maml:name>
          <maml:description>
            <maml:para>If specified, the result includes only networking capabilities</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>*</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PackageTypeFilter</maml:name>
        <maml:description>
          <maml:para>Specifies the type of a packages to get from the package repository.</maml:para>
          <maml:para>Valid values are: Bundle Framework Main Resource None (default)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="App, StoreApp">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>One or more Windows store apps for which to retrieve capabilities</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which to run function</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>Specify user name for which to obtain store apps to query capabilities.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludeAuthority</maml:name>
        <maml:description>
          <maml:para>If specified, outputs full reference name. By default only capability display name is returned.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Networking</maml:name>
        <maml:description>
          <maml:para>If specified, the result includes only networking capabilities</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[object[]] Deserialized object on PowerShell Core 7.1+, otherwise</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>[Microsoft.Windows.Appx.PackageManager.Commands.AppxPackage[]]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string] Capability names or full reference names for capabilities of an app</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: There are some capabilities not implemented here</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-AppxPackage -Name "*ZuneMusic*" | Get-AppCapability</dev:code>
        <dev:remarks>
          <maml:para>Your Internet connection Your home or work networks Your music library Removable storage</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-AppCapability -IncludeAuthority -InputObject (Get-AppxPackage -Name "*ZuneMusic*") -Networking</dev:code>
        <dev:remarks>
          <maml:para>APPLICATION PACKAGE AUTHORITY\Your Internet connection APPLICATION PACKAGE AUTHORITY\Your home or work networks</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-AppCapability.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-AppCapability.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/generate-package-manifest</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/generate-package-manifest</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/appxmanifestschema/element-capability</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/appxmanifestschema/element-capability</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/element-capability</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/uapmanifestschema/element-capability</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/uwp/api/Windows.Management.Deployment.PackageTypes</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/uwp/api/Windows.Management.Deployment.PackageTypes</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AppSID</command:name>
      <command:verb>Get</command:verb>
      <command:noun>AppSID</command:noun>
      <maml:description>
        <maml:para>Get store app SID</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get SID for single store app if the app exists</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AppSID</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="FamilyName">
          <maml:name>PackageFamilyName</maml:name>
          <maml:description>
            <maml:para>"PackageFamilyName" string</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="FamilyName">
        <maml:name>PackageFamilyName</maml:name>
        <maml:description>
          <maml:para>"PackageFamilyName" string</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-AppSID</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string] store app SID (security identifier) if app found</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Big thanks to Jani for this awesome solution, see issue from "related links" section TODO: remote computers?</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-AppSID "Microsoft.MicrosoftEdge_8wekyb3d8bbwe"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-AppSID.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-AppSID.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/issues/6</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/issues/6</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ExecutablePath</command:name>
      <command:verb>Get</command:verb>
      <command:noun>ExecutablePath</command:noun>
      <maml:description>
        <maml:para>Get a list of install locations for executable files</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Returns a table of installed programs, with executable name, installation path, registry path and child registry key name for target computer</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ExecutablePath</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name which to check</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name which to check</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-ExecutablePath</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] list of executables, their installation path and additional information</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Name parameter accepting wildcard, why not getting specifics out?</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-ExecutablePath</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-ExecutablePath "COMPUTERNAME"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-ExecutablePath.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-NetFramework</command:name>
      <command:verb>Get</command:verb>
      <command:noun>NetFramework</command:noun>
      <maml:description>
        <maml:para>Get installed .NET Frameworks</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get-NetFramework will return all NET frameworks installed regardless if installation directory exists or not, since some versions are built in</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-NetFramework</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name for which to list installed installed framework</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name for which to list installed installed framework</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-NetFramework</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] for installed NET Frameworks and install paths</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-NetFramework</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-NetFramework COMPUTERNAME</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-NetFramework.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-OneDrive</command:name>
      <command:verb>Get</command:verb>
      <command:noun>OneDrive</command:noun>
      <maml:description>
        <maml:para>Get One Drive information for specific user</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Search installed One Drive instance in userprofile for specific user account</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-OneDrive</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of "USERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-OneDrive</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of "USERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Specifies the CIM session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="UserName">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>User name in form of "USERNAME"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CimSession</maml:name>
        <maml:description>
          <maml:para>Specifies the CIM session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-OneDrive</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] OneDrive program info for specified user on a target computer</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: We should make a query for an array of users, will help to save into variable, this is duplicate comment of Get-UserSoftware TODO: The logic of this function should probably be part of Get-UserSoftware, it is unknown if OneDrive can be installed for all users too.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-OneDrive "USERNAME"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-OneDrive "USERNAME" -Domain "Server01"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-OneDrive.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-SqlManagementStudio</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SqlManagementStudio</command:noun>
      <maml:description>
        <maml:para>Get installed Microsoft SQL Server Management Studios</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get all instances of installed Microsoft SQL Server Management Studios from local or remote machine.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-SqlManagementStudio</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name for which to list installed installed framework</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name for which to list installed installed framework</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-SqlManagementStudio</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] for installed Microsoft SQL Server Management Studio's</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-SqlManagementStudio SERVER01</dev:code>
        <dev:remarks>
          <maml:para>Domain       Name                                       InstallLocation ------       ----                                       --------------- SERVER01     Microsoft SQL Server Management Studio     %ProgramFiles(x86)%\Microsoft SQL Server Management Studio 18</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-SqlManagementStudio.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-SqlServerInstance</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SqlServerInstance</command:noun>
      <maml:description>
        <maml:para>Get SQL server information from a local or remote servers</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Retrieves SQL server information from a local or remote servers. Pulls all instances from a SQL server and detects if in a cluster or not.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-SqlServerInstance</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Local or remote systems to query for SQL information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CIM</maml:name>
          <maml:description>
            <maml:para>If specified, try to pull and correlate CIM information for SQL TODO: limited testing was performed in matching up the service info to registry info.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Local or remote systems to query for SQL information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CIM</maml:name>
        <maml:description>
          <maml:para>If specified, try to pull and correlate CIM information for SQL TODO: limited testing was performed in matching up the service info to registry info.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[string[]]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Name: Get-SqlServer Author: Boe Prox, edited by cookie monster (to cover wow6432node, CIM tie in)</maml:para>
        <maml:para>Version History:</maml:para>
        <maml:para>v1.5 Boe Prox - 31 May 2016:</maml:para>
        <maml:para>- Added CIM queries for more information</maml:para>
        <maml:para>- Custom object type name</maml:para>
        <maml:para></maml:para>
        <maml:para>v1.0 Boe Prox -  07 Sept 2013:</maml:para>
        <maml:para>- Initial Version</maml:para>
        <maml:para>Following modifications by metablaster based on both originals 15 Feb 2020:</maml:para>
        <maml:para>- change syntax, casing, code style and function name</maml:para>
        <maml:para>- resolve warnings, replacing aliases with full names</maml:para>
        <maml:para>- change how function returns</maml:para>
        <maml:para>- Add code to return SQL DTS Path</maml:para>
        <maml:para>- separate support for 32 bit systems</maml:para>
        <maml:para>- Include license into file (MIT all 3), links to original sites and add appropriate Copyright for each author/contributor</maml:para>
        <maml:para>- update reported server versions</maml:para>
        <maml:para>- added more verbose and debug output, path formatting.</maml:para>
        <maml:para>- Replaced WMI calls with CIM calls which are more universal and cross platform</maml:para>
        <maml:para></maml:para>
        <maml:para>12 December 2020:</maml:para>
        <maml:para>- Renamed from Get-SQLInstance to Get-SqlServerInstance because of name colision from SQLPS module</maml:para>
        <maml:para>14 April 2021:</maml:para>
        <maml:para>- Check returned key is not null when opening from top registry node</maml:para>
        <maml:para>See links section for original and individual versions of code</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-SqlServerInstance -Domain Server01 | Select-Object *</dev:code>
        <dev:remarks>
          <maml:para>Domain          : Server01 SqlInstance     : MSSQLSERVER InstallLocation : %ProgramW6432%\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\Binn SqlPath         : %ProgramW6432%\Microsoft SQL Server\150\DTS Version         : 15.0.2080.9 Name            : SQL Server 2019 IsCluster       : False FullName        : Server01 IsClusterNode   : False Edition         : Developer Edition ClusterName     : ClusterNodes    : {}</maml:para>
          <maml:para>Domain          : Server01 SqlInstance     : MSSQLSERVER InstallLocation : %ProgramW6432%\Microsoft SQL Server\MSSQL8.MSSQLSERVER\MSSQL\Binn SqlPath         : %ProgramW6432%\Microsoft SQL Server\80\DTS Version         : 10.0.1600.22 Name            : SQL Server 2008 IsCluster       : False FullName        : Server01 IsClusterNode   : False Edition         : Enterprise Edition ClusterName     : ClusterNodes    : {}</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-SqlServerInstance -Domain Server1, Server2 -CIM</dev:code>
        <dev:remarks>
          <maml:para>Domain           : Server1 SqlInstance      : MSSQLSERVER InstallLocation  : D:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\Binn SqlPath          : D:\Program Files\Microsoft SQL Server\80\DTS Edition          : Enterprise Edition: Core-based Licensing Version          : 11.0.3128.0 Name             : SQL Server 2012 IsCluster        : False IsClusterNode    : False ClusterName      : ClusterNodes     : {} FullName         : Server1 ServiceName      : SQL Server (MSSQLSERVER) ServiceState     : Running ServiceAccount   : domain\Server1SQL ServiceStartMode : Auto</maml:para>
          <maml:para>Domain           : Server2 SqlInstance      : MSSQLSERVER InstallLocation  : D:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\Binn SqlPath          : D:\Program Files\Microsoft SQL Server\100\DTS Edition          : Enterprise Edition Version          : 10.50.4000.0 Name             : SQL Server 2008 R2 IsCluster        : False IsClusterNode    : False ClusterName      : ClusterNodes     : {} FullName         : Server2 ServiceName      : SQL Server (MSSQLSERVER) ServiceState     : Running ServiceAccount   : domain\Server2SQL ServiceStartMode : Auto</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-SqlServerInstance.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-SqlServerInstance.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://github.com/RamblingCookieMonster/PowerShell</maml:linkText>
        <maml:uri>https://github.com/RamblingCookieMonster/PowerShell</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://gallery.technet.microsoft.com/scriptcenter/Get-SQLInstance-9a3245a0</maml:linkText>
        <maml:uri>https://gallery.technet.microsoft.com/scriptcenter/Get-SQLInstance-9a3245a0</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-SystemApp</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SystemApp</command:noun>
      <maml:description>
        <maml:para>Get store apps installed system wide</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Search system wide installed store apps, those installed for all users or shipped with system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-SystemApp</maml:name>
        <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of:</maml:para>
            <maml:para>- domain\user_name</maml:para>
            <maml:para>- user_name@fqn.domain.tld</maml:para>
            <maml:para>- user_name</maml:para>
            <maml:para>- SID-string</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-SystemApp</maml:name>
        <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of:</maml:para>
            <maml:para>- domain\user_name</maml:para>
            <maml:para>- user_name@fqn.domain.tld</maml:para>
            <maml:para>- user_name</maml:para>
            <maml:para>- SID-string</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>*</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>User name in form of:</maml:para>
          <maml:para>- domain\user_name</maml:para>
          <maml:para>- user_name@fqn.domain.tld</maml:para>
          <maml:para>- user_name</maml:para>
          <maml:para>- SID-string</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-SystemApp</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[Microsoft.Windows.Appx.PackageManager.Commands.AppxPackage] store app information object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[object] In Windows PowerShell</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[Deserialized.Microsoft.Windows.Appx.PackageManager.Commands.AppxPackage] In PowerShell Core</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Query multiple computers TODO: We should probably return custom object to be able to pipe to functions such as Get-AppSID TODO: Format.ps1xml not applied in Windows PowerShell</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-SystemApp "User" -Domain "Server01"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-SystemApp "Administrator"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-SystemApp.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-SystemSoftware</command:name>
      <command:verb>Get</command:verb>
      <command:noun>SystemSoftware</command:noun>
      <maml:description>
        <maml:para>Search installed programs for all users, system wide</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get a list of software installed system wide, for all users.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-SystemSoftware</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name which to check</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name which to check</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-SystemSoftware</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] list of programs installed for all users</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>We should return empty PSCustomObject if test computer fails TODO: Parameter for x64 vs x86 software, then update Search-Installation switch as needed</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-SystemSoftware</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-SystemSoftware "Server01"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-SystemSoftware.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-UserApp</command:name>
      <command:verb>Get</command:verb>
      <command:noun>UserApp</command:noun>
      <maml:description>
        <maml:para>Get store apps for specific user</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Search installed store apps in userprofile for specific user account</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-UserApp</maml:name>
        <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of:</maml:para>
            <maml:para>- domain\user_name</maml:para>
            <maml:para>- user_name@fqn.domain.tld</maml:para>
            <maml:para>- user_name</maml:para>
            <maml:para>- SID-string</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-UserApp</maml:name>
        <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>*</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of:</maml:para>
            <maml:para>- domain\user_name</maml:para>
            <maml:para>- user_name@fqn.domain.tld</maml:para>
            <maml:para>- user_name</maml:para>
            <maml:para>- SID-string</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of a particular package. If specified, function returns results for this package only. Wildcards are permitted.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>*</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>User name in form of:</maml:para>
          <maml:para>- domain\user_name</maml:para>
          <maml:para>- user_name@fqn.domain.tld</maml:para>
          <maml:para>- user_name</maml:para>
          <maml:para>- SID-string</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-UserApp</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[Microsoft.Windows.Appx.PackageManager.Commands.AppxPackage] store app information object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[object] if using PowerShell Core which outputs deserialized object:</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[Deserialized.Microsoft.Windows.Appx.PackageManager.Commands.AppxPackage]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: We should probably return custom object to be able to pipe to functions such as Get-AppSID TODO: See also -AllUsers and other parameters in related links TODO: Format.ps1xml not applied in Windows PowerShell</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-UserApp "User" -Domain "Server01"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-UserApp "Administrator"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-UserApp.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-UserApp.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/powershell/module/appx/get-appxpackage?view=win10-ps</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/appx/get-appxpackage?view=win10-ps</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-UserSoftware</command:name>
      <command:verb>Get</command:verb>
      <command:noun>UserSoftware</command:noun>
      <maml:description>
        <maml:para>Get a list of programs installed by specific user</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Search installed programs in userprofile for specific user account</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-UserSoftware</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of "USERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-UserSoftware</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>User name in form of "USERNAME"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Specifies the CIM session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="UserName">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>User name in form of "USERNAME"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>NETBIOS Computer name in form of "COMPUTERNAME"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CimSession</maml:name>
        <maml:description>
          <maml:para>Specifies the CIM session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-UserSoftware</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] list of programs for specified user on a target computer</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: We should make a query for an array of users, will help to save into variable</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-UserSoftware "User"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-UserSoftware "User" -Domain "Server01"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-UserSoftware.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-WindowsDefender</command:name>
      <command:verb>Get</command:verb>
      <command:noun>WindowsDefender</command:noun>
      <maml:description>
        <maml:para>Get Windows Defender installation information</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Gets Windows defender install location directory</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-WindowsDefender</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name for which to list installed Windows Defender</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name for which to list installed Windows Defender</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-WindowsDefender</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] for installed Windows Defender, version and install paths</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-WindowsDefender</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-WindowsDefender Server01</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-WindowsDefender.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-WindowsKit</command:name>
      <command:verb>Get</command:verb>
      <command:noun>WindowsKit</command:noun>
      <maml:description>
        <maml:para>Get installed Windows Kits</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get installation information about installed Windows Kit's</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-WindowsKit</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name for which to list installed installed windows kits</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name for which to list installed installed windows kits</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-WindowsKit</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] for installed Windows Kits versions and install paths</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-WindowsKit</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-WindowsKit Server01</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-WindowsKit.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-WindowsSDK</command:name>
      <command:verb>Get</command:verb>
      <command:noun>WindowsSDK</command:noun>
      <maml:description>
        <maml:para>Get installed Windows SDK</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get installation information about installed Windows SDK</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-WindowsSDK</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name for which to list installed installed framework</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name for which to list installed installed framework</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-WindowsSDK</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] for installed Windows SDK versions and install paths</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-WindowsSDK</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-WindowsSDK Server01</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Get-WindowsSDK.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Search-Installation</command:name>
      <command:verb>Search</command:verb>
      <command:noun>Installation</command:noun>
      <maml:description>
        <maml:para>Find installation directory for given predefined program name</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Search-Installation is called by Confirm-Installation, ie. only if test for existing path fails then this method kicks in</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Search-Installation</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Program">
          <maml:name>Application</maml:name>
          <maml:description>
            <maml:para>Predefined program name</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Psiphon</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSI</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeWebView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">dotnet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CMake</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlPath</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlServer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlManagementStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsDefender</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NuGet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NETFramework</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">vcpkg</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SysInternals</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsKits</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WebPlatform</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSpace</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XTU</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chocolatey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ArenaChess</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GoogleDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RivaTuner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Incredibuild</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColorMania</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MetaTrader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RealWorld</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AzureDataStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">qBittorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenTTD</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EveOnline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DemiseOfNations</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CounterStrikeGO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PinballArcade</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaUpdate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaRuntime</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeARM</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeReader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeAcrobat</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LoLGame</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FileZilla</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PathOfExile</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HWMonitor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CPUZ</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSIAfterburner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GPG</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OBSStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PasswordSafe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Greenshot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DnsCrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSSH</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellCore64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OneDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HelpViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VSCode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MicrosoftOffice</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TeamViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeChromium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chrome</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Firefox</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yandex</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Tor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">uTorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thuderbird</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Steam</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GeForceExperience</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WarThunder</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PokerStars</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudioInstaller</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSYS2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Git</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GitHubDesktop</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EpicGames</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UnrealEngine</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BingWallpaper</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TargetProgram</command:parameterValue>
          <dev:type>
            <maml:name>TargetProgram</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which to search for program installations</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Interactive</maml:name>
          <maml:description>
            <maml:para>If requested program installation directory is not found, Search-Installation will ask user to specify program installation location</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, it suppresses warning, error or informationall messages if default program installation directory path does not exist or if it's of an invalid syntax needed for firewall. Same applies for program path (if found) specified by -Application parameter.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Search-Installation</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Program">
          <maml:name>Application</maml:name>
          <maml:description>
            <maml:para>Predefined program name</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Psiphon</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSI</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeWebView</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">dotnet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CMake</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlPath</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlServer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SqlManagementStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsDefender</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NuGet</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NETFramework</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">vcpkg</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SysInternals</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WindowsKits</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WebPlatform</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSpace</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">XTU</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chocolatey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ArenaChess</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GoogleDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RivaTuner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Incredibuild</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ColorMania</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MetaTrader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RealWorld</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AzureDataStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">qBittorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenTTD</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EveOnline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DemiseOfNations</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CounterStrikeGO</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PinballArcade</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaUpdate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">JavaRuntime</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeARM</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeReader</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AdobeAcrobat</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">LoLGame</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FileZilla</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PathOfExile</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HWMonitor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CPUZ</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSIAfterburner</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GPG</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OBSStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PasswordSafe</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Greenshot</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DnsCrypt</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OpenSSH</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellCore64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShell86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">OneDrive</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">HelpViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VSCode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MicrosoftOffice</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TeamViewer</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EdgeChromium</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Chrome</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Firefox</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yandex</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Tor</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">uTorrent</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Thuderbird</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Steam</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia64</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Nvidia86</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GeForceExperience</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WarThunder</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PokerStars</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudio</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">VisualStudioInstaller</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">MSYS2</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Git</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">GitHubDesktop</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EpicGames</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UnrealEngine</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">BingWallpaper</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">TargetProgram</command:parameterValue>
          <dev:type>
            <maml:name>TargetProgram</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CimSession</maml:name>
          <maml:description>
            <maml:para>Specifies the CIM session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Interactive</maml:name>
          <maml:description>
            <maml:para>If requested program installation directory is not found, Search-Installation will ask user to specify program installation location</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, it suppresses warning, error or informationall messages if default program installation directory path does not exist or if it's of an invalid syntax needed for firewall. Same applies for program path (if found) specified by -Application parameter.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="Program">
        <maml:name>Application</maml:name>
        <maml:description>
          <maml:para>Predefined program name</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">TargetProgram</command:parameterValue>
        <dev:type>
          <maml:name>TargetProgram</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which to search for program installations</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CimSession</maml:name>
        <maml:description>
          <maml:para>Specifies the CIM session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.Management.Infrastructure.CimSession</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.Management.Infrastructure.CimSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Interactive</maml:name>
        <maml:description>
          <maml:para>If requested program installation directory is not found, Search-Installation will ask user to specify program installation location</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>If specified, it suppresses warning, error or informationall messages if default program installation directory path does not exist or if it's of an invalid syntax needed for firewall. Same applies for program path (if found) specified by -Application parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Search-Installation</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool] true or false if installation directory if found, installation table is updated</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Search-Installation "Office"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Search-Installation "VSCode" -Domain Server01</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Search-Installation.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-ExecutableFile</command:name>
      <command:verb>Test</command:verb>
      <command:noun>ExecutableFile</command:noun>
      <maml:description>
        <maml:para>Check if executable file exists and is trusted.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Test-ExecutableFile verifies the path to executable file is valid and that executable itself exists. File extension is then verified to confirm it is whitelisted, ex. such as an *.exe The executable is then verified to ensure it's digitaly signed and that signature is valid. If digital signature is missing or not valid, the file is optionally scanned on virus total to confirm it's not malware. If the file can't be found or verified, an error is genrated possibly with informational message, to explain if there is any problem with the path or file name syntax, otherwise information is present to the user to explain how to resolve the problem including a stack trace to script that is producing this issue.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-ExecutableFile</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Fully qualified path to executable file</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which executable file to be tested is located</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SigcheckLocation</maml:name>
          <maml:description>
            <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.DirectoryInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>$SigcheckPath</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeOut</maml:name>
          <maml:description>
            <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>300</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, lack of digital signature or signature mismatch produces a warning instead of an error resulting in bypassed signature test. This parameter has no effect virus total check, if the file is reported as malware the return value is False.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-ExecutableFile</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Fully qualified path to executable file</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SigcheckLocation</maml:name>
          <maml:description>
            <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.DirectoryInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>$SigcheckPath</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeOut</maml:name>
          <maml:description>
            <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>300</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, lack of digital signature or signature mismatch produces a warning instead of an error resulting in bypassed signature test. This parameter has no effect virus total check, if the file is reported as malware the return value is False.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Fully qualified path to executable file</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which executable file to be tested is located</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SigcheckLocation</maml:name>
        <maml:description>
          <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.DirectoryInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>$SigcheckPath</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TimeOut</maml:name>
        <maml:description>
          <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>300</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>If specified, lack of digital signature or signature mismatch produces a warning instead of an error resulting in bypassed signature test. This parameter has no effect virus total check, if the file is reported as malware the return value is False.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Test-ExecutableFile</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: We should attempt to fix the path if invalid here, ex. Get-Command (-Repair parameter) TODO: We should return true or false and conditionally load rule TODO: Verify file is executable file (and path formatted?)</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Test-ExecutableFile "C:\Windows\UnsignedFile.exe"</dev:code>
        <dev:remarks>
          <maml:para>ERROR: Digital signature verification failed for: C:\Windows\UnsignedFile.exe</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Test-ExecutableFile "C:\Users\USERNAME\AppData\Application\chrome.exe"</dev:code>
        <dev:remarks>
          <maml:para>WARNING: Executable 'chrome.exe' was not found, firewall rule not loaded INFO: Searched path was: C:\Users\USERNAME\AppData\Application\chrome.exe INFO: To fix this problem find 'chrome.exe' and update installation directory in Test-ExecutableFile.ps1 script</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Test-ExecutableFile "\\COMPUTERNAME\Directory\file.exe"</dev:code>
        <dev:remarks>
          <maml:para>ERROR: Specified file path is missing a file system qualifier: \\COMPUTERNAME\Directory\file.exe</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>Test-ExecutableFile ".\..\file.exe"</dev:code>
        <dev:remarks>
          <maml:para>ERROR: Specified file path is relative: .\..\file.exe</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>Test-ExecutableFile "C:\Bad\&lt;Path&gt;\Loca'tion"</dev:code>
        <dev:remarks>
          <maml:para>ERROR: Specified file path contains invalid characters: C:\Bad\&lt;Path&gt;\Loca'tion</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Test-ExecutableFile.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-FileSystemPath</command:name>
      <command:verb>Test</command:verb>
      <command:noun>FileSystemPath</command:noun>
      <maml:description>
        <maml:para>Test existence of a file system path and validate path syntax</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Test-FileSystemPath checks file system path syntax by verifying environment variables and reporting unresolved wildcard pattern or bad characters. The path is then tested to confirm it points to an existing and valid location.</maml:para>
      <maml:para>Optionally you can check if the path is compatible for firewall rules or if the path leads to user profile. All of which can be limited to either container or leaf path type.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-FileSystemPath</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Path to directory or file which to test. Allows null or empty since it may come from commandlets which may return empty string or null</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which to test path</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Type">
          <maml:name>PathType</maml:name>
          <maml:description>
            <maml:para>The type of path to test, can be one of the following: 1. File - The path is path to file 2. Directory - The path is path to directory 3. Any - The path is either path to file or directory, this is default</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Any</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Firewall</maml:name>
          <maml:description>
            <maml:para>Ensures path is valid for firewall rule. When specified, for path to be reported as valid it must be compatible for firewall</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UserProfile</maml:name>
          <maml:description>
            <maml:para>Checks if the path leads to user profile. When specified, for path to be reported as valid it must lead to user profile.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-FileSystemPath</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Path to directory or file which to test. Allows null or empty since it may come from commandlets which may return empty string or null</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Type">
          <maml:name>PathType</maml:name>
          <maml:description>
            <maml:para>The type of path to test, can be one of the following: 1. File - The path is path to file 2. Directory - The path is path to directory 3. Any - The path is either path to file or directory, this is default</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Any</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Firewall</maml:name>
          <maml:description>
            <maml:para>Ensures path is valid for firewall rule. When specified, for path to be reported as valid it must be compatible for firewall</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UserProfile</maml:name>
          <maml:description>
            <maml:para>Checks if the path leads to user profile. When specified, for path to be reported as valid it must lead to user profile.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Path to directory or file which to test. Allows null or empty since it may come from commandlets which may return empty string or null</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which to test path</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Type">
        <maml:name>PathType</maml:name>
        <maml:description>
          <maml:para>The type of path to test, can be one of the following: 1. File - The path is path to file 2. Directory - The path is path to directory 3. Any - The path is either path to file or directory, this is default</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Any</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Firewall</maml:name>
        <maml:description>
          <maml:para>Ensures path is valid for firewall rule. When specified, for path to be reported as valid it must be compatible for firewall</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UserProfile</maml:name>
        <maml:description>
          <maml:para>Checks if the path leads to user profile. When specified, for path to be reported as valid it must lead to user profile.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Test-FileSystemPath</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool] true if path exists, false otherwise</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>The result of this function should be used only to verify paths for external usage, not as input to commandles which don't recognize system environment variables. This function is needed in cases where the path may be a modified version of an already formatted or verified path such as in rule scripts or to verify manually edited installation table. TODO: This should proably be part of Utility or ComputerInfo module, it's here since only this module uses this function.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Test-FileSystemPath "%Windir%"</dev:code>
        <dev:remarks>
          <maml:para>True, The path is valid, and it exists</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Test-FileSystemPath "'%Windir%\System32'"</dev:code>
        <dev:remarks>
          <maml:para>False, Invalid path syntax</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Test-FileSystemPath "%HOME%\AppData\Local\MicrosoftEdge" -Firewall -UserProfile</dev:code>
        <dev:remarks>
          <maml:para>False, the path contains environment variable that leads to userprofile and will not work for firewall</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>Test-FileSystemPath "%SystemDrive%\Users\USERNAME\AppData\Local\MicrosoftEdge" -Firewall -UserProfile</dev:code>
        <dev:remarks>
          <maml:para>True, the path leads to userprofile, is good for firewall rule and it exists</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>Test-FileSystemPath "%LOCALAPPDATA%\MicrosoftEdge" -UserProfile</dev:code>
        <dev:remarks>
          <maml:para>True, the path lead to user profile, and it exists</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Test-FileSystemPath.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-Service</command:name>
      <command:verb>Test</command:verb>
      <command:noun>Service</command:noun>
      <maml:description>
        <maml:para>Check if system service exists and is trusted</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Test-Service verifies specified Windows services exists. The service is then verified to confirm it's digitaly signed and that signature is valid. If the service can't be found or verified, an error is genrated.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-Service</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="ServiceName">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Service short name (not display name)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which service to be tested is located</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SigcheckLocation</maml:name>
          <maml:description>
            <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.DirectoryInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>$SigcheckPath</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeOut</maml:name>
          <maml:description>
            <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>300</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, lack of digital signature or signature mismatch produces a warning instead of an error resulting in passed test.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-Service</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="ServiceName">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Service short name (not display name)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SigcheckLocation</maml:name>
          <maml:description>
            <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.DirectoryInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>$SigcheckPath</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeOut</maml:name>
          <maml:description>
            <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>300</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, lack of digital signature or signature mismatch produces a warning instead of an error resulting in passed test.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="ServiceName">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Service short name (not display name)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which service to be tested is located</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SigcheckLocation</maml:name>
        <maml:description>
          <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.DirectoryInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>$SigcheckPath</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TimeOut</maml:name>
        <maml:description>
          <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>300</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>If specified, no information, warning or error message is shown, only true or false is returned</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>If specified, lack of digital signature or signature mismatch produces a warning instead of an error resulting in passed test.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[string[]]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Implement accept ServiceController object, should be called InputObject, a good design needed, however it doesn't make much sense since the function is to test existence of a service too.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Test-Service dnscache</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Test-Service WSearch -Domain Server01</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Test-Service SomeService -Quiet -Force</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Test-Service.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-VirusTotal</command:name>
      <command:verb>Test</command:verb>
      <command:noun>VirusTotal</command:noun>
      <maml:description>
        <maml:para>Analyze file trough virus total API</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Test-VirusTotal performs malware analysis on file by using sysinternals sigcheck program which in turn uses virus total API to perform analysis.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-VirusTotal</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Fully qualified path to executable file which is to be tested</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which executable file to be tested is located</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SigcheckLocation</maml:name>
          <maml:description>
            <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeOut</maml:name>
          <maml:description>
            <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>300</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-VirusTotal</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Fully qualified path to executable file which is to be tested</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SigcheckLocation</maml:name>
          <maml:description>
            <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeOut</maml:name>
          <maml:description>
            <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>300</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Fully qualified path to executable file which is to be tested</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which executable file to be tested is located</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SigcheckLocation</maml:name>
        <maml:description>
          <maml:para>Specify path to sigcheck executable program. Do not specify sigcheck file, only path to where sigcheck is located. By default working directory and PATH is searched for sigcheck64.exe. On 32 bit operating system sigcheck.exe is searched instead. If location to sigcheck executable is not found then no virus total scan and report is done.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TimeOut</maml:name>
        <maml:description>
          <maml:para>Specify maximum wait time expressed in seconds for virus total to scan individual file. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 300 (5 minutes).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>300</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Test-VirusTotal</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Test-VirusTotal -LiteralPath "C:\Windows\notepad.exe" -SigcheckLocation "C:\tools"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Test-VirusTotal.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.ProgramInfo/Help/en-US/Test-VirusTotal.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>