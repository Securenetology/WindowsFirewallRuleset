<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Approve-Execute</command:name>
      <command:verb>Approve</command:verb>
      <command:noun>Execute</command:noun>
      <maml:description>
        <maml:para>Customized user prompt to continue</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Prompt user to continue running script or section of code. In addition to prompt, an optional execution context can be shown. Help messages for prompt choices can be optionally customized. Asking for approval can help to run master script and only execute specific set of scripts.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Approve-Execute</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>Prompt title</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Context</maml:name>
          <maml:description>
            <maml:para>Optional context to append to the title. Context is automatically regenerated if the -Title parameter is empty or not set. Otherwise previous context is reused.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ContextLeaf</maml:name>
          <maml:description>
            <maml:para>Optional string to append to context. If not specified, context leaf is automatically generated if both the -Title and -Context parameters are not set. Otherwise if -Title is set without -Context this parameter is ignored.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Question</maml:name>
          <maml:description>
            <maml:para>Prompt question</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Do you want to run this script?</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Accept</maml:name>
          <maml:description>
            <maml:para>Custom help message for "Yes" choice</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Continue with only the next step of the operation</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Deny</maml:name>
          <maml:description>
            <maml:para>Custom help message for "No" choice</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Skip this operation and proceed with the next operation</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YesToAll</maml:name>
          <maml:description>
            <maml:para>Will be set to true if user selects YesToAll. If this is already true, Approve-Execute will bypass the prompt and return true.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSReference</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSReference</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoToAll</maml:name>
          <maml:description>
            <maml:para>Will be set to true if user selects NoToAll. If this is already true, Approve-Execute will bypass the prompt and return false.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSReference</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSReference</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>YesAllHelp</maml:name>
          <maml:description>
            <maml:para>Custom help message for "YesToAll" choice</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Continue with all the steps of the operation</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoAllHelp</maml:name>
          <maml:description>
            <maml:para>Custom help message for "NoToAll" choice</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Skip this operation and all subsequent operations</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Unsafe</maml:name>
          <maml:description>
            <maml:para>If specified, the command is considered unsafe and the default action is then "No"</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, only module scope last context is set and the function returns true</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>Prompt title</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Context</maml:name>
        <maml:description>
          <maml:para>Optional context to append to the title. Context is automatically regenerated if the -Title parameter is empty or not set. Otherwise previous context is reused.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ContextLeaf</maml:name>
        <maml:description>
          <maml:para>Optional string to append to context. If not specified, context leaf is automatically generated if both the -Title and -Context parameters are not set. Otherwise if -Title is set without -Context this parameter is ignored.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Question</maml:name>
        <maml:description>
          <maml:para>Prompt question</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Do you want to run this script?</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Accept</maml:name>
        <maml:description>
          <maml:para>Custom help message for "Yes" choice</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Continue with only the next step of the operation</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Deny</maml:name>
        <maml:description>
          <maml:para>Custom help message for "No" choice</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Skip this operation and proceed with the next operation</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YesToAll</maml:name>
        <maml:description>
          <maml:para>Will be set to true if user selects YesToAll. If this is already true, Approve-Execute will bypass the prompt and return true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSReference</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSReference</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoToAll</maml:name>
        <maml:description>
          <maml:para>Will be set to true if user selects NoToAll. If this is already true, Approve-Execute will bypass the prompt and return false.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSReference</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSReference</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>YesAllHelp</maml:name>
        <maml:description>
          <maml:para>Custom help message for "YesToAll" choice</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Continue with all the steps of the operation</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoAllHelp</maml:name>
        <maml:description>
          <maml:para>Custom help message for "NoToAll" choice</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Skip this operation and all subsequent operations</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Unsafe</maml:name>
        <maml:description>
          <maml:para>If specified, the command is considered unsafe and the default action is then "No"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>If specified, only module scope last context is set and the function returns true</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Approve-Execute</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool] True if operation should be performed, false otherwise</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Help messages and question message needs better description to fit more scenarios TODO: Implement accepting arbitrary amount of choices, ex. [ChoiceDescription[]] parameter TODO: Implement timeout to accept default choice, ex. Host.UI.RawUI.KeyAvailable TODO: Standard parameter for help message should be -Prompt</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Approve-Execute -Unsafe -Title "Sample title" -Question "Sample question"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>[bool] $YesToAll = $false
PS&gt; [bool] $NoToAll = $false
PS&gt; Approve-Execute -YesToAll ([ref] $YesToAll) -NoToAll ([ref] $NoToAll)</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Approve-Execute.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Compare-Path</command:name>
      <command:verb>Compare</command:verb>
      <command:noun>Path</command:noun>
      <maml:description>
        <maml:para>Compare two paths for equality or similarity</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Compare-Path depending on parameters either checks if two paths lead to same location taking into account environment variables, relative path locations and wildcards or it checks if two paths are similar which depends on wildcards contained in the input</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Compare-Path</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>The path which to compare against the reference path</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>ReferencePath</maml:name>
          <maml:description>
            <maml:para>The path against which to compare</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Loose</maml:name>
          <maml:description>
            <maml:para>If specified, perform "loose" comparison: Does not attempt to resolve input paths, and respects wildcards all of which happens after input paths have been expanded off environment variables</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CaseSensitive</maml:name>
          <maml:description>
            <maml:para>If specified, performs case sensitive comparison</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>The path which to compare against the reference path</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>ReferencePath</maml:name>
        <maml:description>
          <maml:para>The path against which to compare</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Loose</maml:name>
        <maml:description>
          <maml:para>If specified, perform "loose" comparison: Does not attempt to resolve input paths, and respects wildcards all of which happens after input paths have been expanded off environment variables</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CaseSensitive</maml:name>
        <maml:description>
          <maml:para>If specified, performs case sensitive comparison</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Compare-Path</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Compare-Path "%SystemDrive%\Windows" "C:\Win*" -Loose
True</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Compare-Path "%SystemDrive%\Win*\System32\en-US\.." "C:\Wind*\System3?\" -CaseSensitive
True</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Compare-Path "%SystemDrive%\" "D:\"
False</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Compare-Path.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Confirm-FileEncoding</command:name>
      <command:verb>Confirm</command:verb>
      <command:noun>FileEncoding</command:noun>
      <maml:description>
        <maml:para>Verify file is encoded as expected</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Confirm-FileEncoding verifies target file is encoded as expected. Unexpected encoding may give bad data resulting is unexpected behavior</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Confirm-FileEncoding</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByValue)" position="1" aliases="FilePath">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Path to the file which is to be checked. Wildcard characters are permitted.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.FileInfo[]</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.FileInfo[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Expected encoding, for PS Core the default is "utf8NoBOM" or "ascii", for PS Desktop the default is "utf8" or "ascii"</maml:para>
            <maml:para>The acceptable values for this parameter are as follows:</maml:para>
            <maml:para>ascii: Encoding for the ASCII (7-bit) character set. bigendianunicode: UTF-16 format using the big-endian byte order. bigendianutf32: UTF-32 format using the big-endian byte order. oem: The default encoding for MS-DOS and console programs. unicode: UTF-16 format using the little-endian byte order. utf7: UTF-7 format. utf8: UTF-8 format. utf32: UTF-32 format.</maml:para>
            <maml:para>The following values are valid for Core edition only:</maml:para>
            <maml:para>utf8BOM: UTF-8 format with Byte Order Mark (BOM) utf8NoBOM: UTF-8 format without Byte Order Mark (BOM)</maml:para>
            <maml:para>The following values are valid For Desktop edition only:</maml:para>
            <maml:para>byte: A sequence of bytes. default: Encoding that corresponds to the system's active code page (usually ANSI). string: Same as Unicode. unknown: Same as Unicode.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Binary</maml:name>
          <maml:description>
            <maml:para>If specified, binary files are left alone. By default binary files are detected as having wrong encoding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Confirm-FileEncoding</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Specifies a path to one or more file locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.FileInfo[]</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.FileInfo[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Expected encoding, for PS Core the default is "utf8NoBOM" or "ascii", for PS Desktop the default is "utf8" or "ascii"</maml:para>
            <maml:para>The acceptable values for this parameter are as follows:</maml:para>
            <maml:para>ascii: Encoding for the ASCII (7-bit) character set. bigendianunicode: UTF-16 format using the big-endian byte order. bigendianutf32: UTF-32 format using the big-endian byte order. oem: The default encoding for MS-DOS and console programs. unicode: UTF-16 format using the little-endian byte order. utf7: UTF-7 format. utf8: UTF-8 format. utf32: UTF-32 format.</maml:para>
            <maml:para>The following values are valid for Core edition only:</maml:para>
            <maml:para>utf8BOM: UTF-8 format with Byte Order Mark (BOM) utf8NoBOM: UTF-8 format without Byte Order Mark (BOM)</maml:para>
            <maml:para>The following values are valid For Desktop edition only:</maml:para>
            <maml:para>byte: A sequence of bytes. default: Encoding that corresponds to the system's active code page (usually ANSI). string: Same as Unicode. unknown: Same as Unicode.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Binary</maml:name>
          <maml:description>
            <maml:para>If specified, binary files are left alone. By default binary files are detected as having wrong encoding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="True (ByValue)" position="1" aliases="FilePath">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Path to the file which is to be checked. Wildcard characters are permitted.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.FileInfo[]</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.FileInfo[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Specifies a path to one or more file locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.FileInfo[]</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.FileInfo[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>Expected encoding, for PS Core the default is "utf8NoBOM" or "ascii", for PS Desktop the default is "utf8" or "ascii"</maml:para>
          <maml:para>The acceptable values for this parameter are as follows:</maml:para>
          <maml:para>ascii: Encoding for the ASCII (7-bit) character set. bigendianunicode: UTF-16 format using the big-endian byte order. bigendianutf32: UTF-32 format using the big-endian byte order. oem: The default encoding for MS-DOS and console programs. unicode: UTF-16 format using the little-endian byte order. utf7: UTF-7 format. utf8: UTF-8 format. utf32: UTF-32 format.</maml:para>
          <maml:para>The following values are valid for Core edition only:</maml:para>
          <maml:para>utf8BOM: UTF-8 format with Byte Order Mark (BOM) utf8NoBOM: UTF-8 format without Byte Order Mark (BOM)</maml:para>
          <maml:para>The following values are valid For Desktop edition only:</maml:para>
          <maml:para>byte: A sequence of bytes. default: Encoding that corresponds to the system's active code page (usually ANSI). string: Same as Unicode. unknown: Same as Unicode.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Binary</maml:name>
        <maml:description>
          <maml:para>If specified, binary files are left alone. By default binary files are detected as having wrong encoding.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[System.IO.FileInfo[]] One or more paths to file to check</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None. Confirm-FileEncoding does not generate any output</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Confirm-FileEncoding C:\SomeFile.txt -Encoding utf16</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Confirm-FileEncoding.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertFrom-Wildcard</command:name>
      <command:verb>ConvertFrom</command:verb>
      <command:noun>Wildcard</command:noun>
      <maml:description>
        <maml:para>Convert wildcard pattern to regex</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>ConvertFrom-Wildcard converts either wildcard pattern string or [WildcardPattern] object to regex equivalent and optionally returns regex object instead of a string, initialized with specified options</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertFrom-Wildcard</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Pattern</maml:name>
          <maml:description>
            <maml:para>Wildcard pattern string which is to be converted</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsRegex</maml:name>
          <maml:description>
            <maml:para>Construct regex object in place with specified parameters. By default regex string pattern is returned.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Options</maml:name>
          <maml:description>
            <maml:para>Optionally specify regex options. By default no options are set.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">IgnoreCase</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Multiline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ExplicitCapture</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Compiled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Singleline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">IgnorePatternWhitespace</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RightToLeft</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ECMAScript</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CultureInvariant</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NonBacktracking</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Text.RegularExpressions.RegexOptions</command:parameterValue>
          <dev:type>
            <maml:name>System.Text.RegularExpressions.RegexOptions</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeSpan</maml:name>
          <maml:description>
            <maml:para>Optionally specify a time-out interval. By default pattern-matching operation does not time out. This parameter has no effect if -AsRegex switch was not specified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[regex]::InfiniteMatchTimeout</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SkipAnchor</maml:name>
          <maml:description>
            <maml:para>If specified, does not add ^ and $ anchors to the result pattern.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>ConvertFrom-Wildcard</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Wildcard</maml:name>
          <maml:description>
            <maml:para>Wildcard pattern object which is to be converted</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.WildcardPattern</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.WildcardPattern</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>AsRegex</maml:name>
          <maml:description>
            <maml:para>Construct regex object in place with specified parameters. By default regex string pattern is returned.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Options</maml:name>
          <maml:description>
            <maml:para>Optionally specify regex options. By default no options are set.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">IgnoreCase</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Multiline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ExplicitCapture</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Compiled</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Singleline</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">IgnorePatternWhitespace</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">RightToLeft</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ECMAScript</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CultureInvariant</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NonBacktracking</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Text.RegularExpressions.RegexOptions</command:parameterValue>
          <dev:type>
            <maml:name>System.Text.RegularExpressions.RegexOptions</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>TimeSpan</maml:name>
          <maml:description>
            <maml:para>Optionally specify a time-out interval. By default pattern-matching operation does not time out. This parameter has no effect if -AsRegex switch was not specified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[regex]::InfiniteMatchTimeout</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Pattern</maml:name>
        <maml:description>
          <maml:para>Wildcard pattern string which is to be converted</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Wildcard</maml:name>
        <maml:description>
          <maml:para>Wildcard pattern object which is to be converted</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.WildcardPattern</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.WildcardPattern</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>AsRegex</maml:name>
        <maml:description>
          <maml:para>Construct regex object in place with specified parameters. By default regex string pattern is returned.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Options</maml:name>
        <maml:description>
          <maml:para>Optionally specify regex options. By default no options are set.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Text.RegularExpressions.RegexOptions</command:parameterValue>
        <dev:type>
          <maml:name>System.Text.RegularExpressions.RegexOptions</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>TimeSpan</maml:name>
        <maml:description>
          <maml:para>Optionally specify a time-out interval. By default pattern-matching operation does not time out. This parameter has no effect if -AsRegex switch was not specified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[regex]::InfiniteMatchTimeout</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SkipAnchor</maml:name>
        <maml:description>
          <maml:para>If specified, does not add ^ and $ anchors to the result pattern.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to ConvertFrom-Wildcard</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[regex]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This function is experimental and needs improvements. Intended purpose of this function is to use regex to parse parameters marked as [SupportsWildcards()]</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>ConvertFrom-Wildcard "*[0-9][[]Po?er[A-Z]he*l?"</dev:code>
        <dev:remarks>
          <maml:para>[string] regex pattern: . [0-9][[]Po.er[A-Z]he. l.$</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>$Result = ConvertFrom-Wildcard "Po?er[A-Z]hell*" -AsRegex -TimeSpan ([System.TimeSpan]::FromSeconds(3))</dev:code>
        <dev:remarks>
          <maml:para>[regex] set to pattern: ^Po.er[A-Z]hell.* with a parse timeout of 3 seconds</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>ConvertFrom-Wildcard "a_b*c%d[e..f]..?g_%%_**[?]??[*]\i[[]*??***[%%]\Z\w+"</dev:code>
        <dev:remarks>
          <maml:para>[string] regex pattern: ^a_b. c%d[e\.\.f]\.\..g_%%_. \?.{2}*\\i[[].{2,}[%%]\\Z\\w\+$</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>$Result = ConvertFrom-Wildcard "MatchThis*" -AsRegex -Options "IgnoreCase"</dev:code>
        <dev:remarks>
          <maml:para>[regex] case insensitive regex set to pattern: ^MatchThis.*</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/ConvertFrom-Wildcard.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/ConvertFrom-Wildcard.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_wildcards?view=powershell-7.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_wildcards?view=powershell-7.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.regexoptions?view=net-5.0</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.regexoptions?view=net-5.0</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Format-ComputerName</command:name>
      <command:verb>Format</command:verb>
      <command:noun>ComputerName</command:noun>
      <maml:description>
        <maml:para>Format computer name to NETBIOS format</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Format-ComputerName formats computer name string to NETBIOS format</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Format-ComputerName</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name which to format</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name which to format</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None. Format-ComputerName does not generate any output</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Need to handle FQDN</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Format-ComputerName localhost</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Format-ComputerName.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-FileEncoding</command:name>
      <command:verb>Get</command:verb>
      <command:noun>FileEncoding</command:noun>
      <maml:description>
        <maml:para>Gets the encoding of a file</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Gets the encoding of a file, if the encoding can't be determined, ex. the file contains unicode charaters but no BOM, then the default encoding is assumed which can be specified trough Encoding parameter.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-FileEncoding</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="FilePath">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>The path of the file to get the encoding of</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.FileInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.FileInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Default encoding to assume for non ASCII files without BOM. This encoding is also used to read file if needed. This parameter can be either a string identifying an encoding that is used by PowerShell commandlets such as "utf8" or System.Text.Encoding object. The default is set by global variable, UTF8 no BOM for Core or UTF8 with BOM for Desktop edition</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Object</command:parameterValue>
          <dev:type>
            <maml:name>System.Object</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>$DefaultEncoding</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="FilePath">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>The path of the file to get the encoding of</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.FileInfo</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>Default encoding to assume for non ASCII files without BOM. This encoding is also used to read file if needed. This parameter can be either a string identifying an encoding that is used by PowerShell commandlets such as "utf8" or System.Text.Encoding object. The default is set by global variable, UTF8 no BOM for Core or UTF8 with BOM for Desktop edition</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Object</command:parameterValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>$DefaultEncoding</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Get-FileEncoding</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Encoding parameter should also accept code page or encoding name, Encoding class has static functions to convert. TODO: Parameter to specify output as [System.Text.Encoding] instead of default [string] TODO: utf8 file reported as ascii in Windows PowerShell</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-FileEncoding .\utf8BOM.txt
utf8BOM</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-FileEncoding .\utf-16LE.txt
unicode</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Get-FileEncoding .\ascii.txt
ascii</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>Get-FileEncoding C:\WINDOWS\regedit.exe
binary</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Get-FileEncoding.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Get-FileEncoding.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.text.encoding?view=netcore-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.text.encoding?view=netcore-3.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/microsoft.powershell.commands.filesystemcmdletproviderencoding?view=powershellsdk-1.1.0</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/microsoft.powershell.commands.filesystemcmdletproviderencoding?view=powershellsdk-1.1.0</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-TypeName</command:name>
      <command:verb>Get</command:verb>
      <command:noun>TypeName</command:noun>
      <maml:description>
        <maml:para>Get commandlet output typename, OutputType attribute or convert to/from type accelerator</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get-TypeName is a multipurpose type name getter, behavior of the function depends on parameter set being used. It can get type name of an object, OutputType attribute of a function or it could convert type name to accelerator and vice versa (accelerator to full name). By default the function works only for .NET types but you can force it handle user defined PSCustomObject's</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-TypeName</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Target object for which to retrieve output typenames. This is the actual output of some commandlet or function when passed to Get-TypeName, either via pipeline or trough parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Object[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Object[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Accelerator</maml:name>
          <maml:description>
            <maml:para>When used converts resultant full typename to accelerator. Otherwise If specified, with "Name" parameter, converts resultant accelerator to full name. No conversion is done if resultant type already is of desired format.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, the function doesn't check if type name is .NET type. This is useful only for PSCustomObject types defined with PSTypeName.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-TypeName</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>Commandlet or function name for which to retrieve OutputType attribute value The command name can be specified either as "FUNCTIONNAME" or just FUNCTIONNAME</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Accelerator</maml:name>
          <maml:description>
            <maml:para>When used converts resultant full typename to accelerator. Otherwise If specified, with "Name" parameter, converts resultant accelerator to full name. No conversion is done if resultant type already is of desired format.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, the function doesn't check if type name is .NET type. This is useful only for PSCustomObject types defined with PSTypeName.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-TypeName</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Translate full type name to accelerator or accelerator to full typename. By default converts acceleartors to full typenames. No conversion is done if resultant type already is of desired format. The name of a type can be specified either as a "typename" or [typename] syntax. Type specified must be .NET type.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Accelerator</maml:name>
          <maml:description>
            <maml:para>When used converts resultant full typename to accelerator. Otherwise If specified, with "Name" parameter, converts resultant accelerator to full name. No conversion is done if resultant type already is of desired format.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Target object for which to retrieve output typenames. This is the actual output of some commandlet or function when passed to Get-TypeName, either via pipeline or trough parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Object[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Object[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Command</maml:name>
        <maml:description>
          <maml:para>Commandlet or function name for which to retrieve OutputType attribute value The command name can be specified either as "FUNCTIONNAME" or just FUNCTIONNAME</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Translate full type name to accelerator or accelerator to full typename. By default converts acceleartors to full typenames. No conversion is done if resultant type already is of desired format. The name of a type can be specified either as a "typename" or [typename] syntax. Type specified must be .NET type.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Accelerator</maml:name>
        <maml:description>
          <maml:para>When used converts resultant full typename to accelerator. Otherwise If specified, with "Name" parameter, converts resultant accelerator to full name. No conversion is done if resultant type already is of desired format.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>If specified, the function doesn't check if type name is .NET type. This is useful only for PSCustomObject types defined with PSTypeName.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[object[]]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>There may be multiple accelerators for same type, for example: Get-TypeName -Name [System.Management.Automation.PSObject] -Accelerator It's possible to rework function to get the exact type if this is desired see begin block TODO: Will not work to detect .NET types for formatted output, see Get-FormatData TODO: Will not work for non .NET types because we have no use of it, but should be implemented, see Get-TypeName unit test</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-TypeName (Get-Process)</dev:code>
        <dev:remarks>
          <maml:para>System.Diagnostics.Process</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-TypeName -Command Get-Process</dev:code>
        <dev:remarks>
          <maml:para>System.Diagnostics.ProcessModule System.Diagnostics.FileVersionInfo System.Diagnostics.Process</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Get-TypeName -Name [switch]</dev:code>
        <dev:remarks>
          <maml:para>System.Management.Automation.SwitchParameter</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>([System.Environment]::MachineName) | Get-TypeName -Accelerator</dev:code>
        <dev:remarks>
          <maml:para>string</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>Generate-Types | Get-TypeName | DealWith-TypeNames</dev:code>
        <dev:remarks>
          <maml:para>Sends typename for each input object down the pipeline</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Get-TypeName.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Invoke-Process</command:name>
      <command:verb>Invoke</command:verb>
      <command:noun>Process</command:noun>
      <maml:description>
        <maml:para>Run process, format and redirect captured process output</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Run process with or without arguments, set process timeout, capture and format output. If target process produces an error, the error message is formatted and shown in addition to standard output if any.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-Process</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="FilePath">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Executable name or path to application which to start. Wildcard characters and relative paths are supported.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>ArgumentList</maml:name>
          <maml:description>
            <maml:para>A collection of command-line arguments to use when starting the application</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name on which to invoke process</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specify Credential used for authentication to Domain.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoNewWindow</maml:name>
          <maml:description>
            <maml:para>Whether to use the operating system shell to start the process</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The amount of time, in milliseconds, to wait for the associated process to exit. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 10000 (10 seconds).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>10000</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Async</maml:name>
          <maml:description>
            <maml:para>If specified, reading process output is asynchronous. This functionality is experimental because current thread will block until timeout.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>If specified, process output is returned as string. By default process output is formatted and redirected to information and error stream.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RunAsCredential</maml:name>
          <maml:description>
            <maml:para>Optionally specify Windows user name and password to use when starting the process.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LoadUserProfile</maml:name>
          <maml:description>
            <maml:para>Specify whether the Windows user profile is to be loaded from the registry Because loading the profile can be time-consuming, it is best to use this value only if you must access the information in the HKEY_CURRENT_USER registry key. Requires RunAsCredential of the user to be specified.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkingDirectory</maml:name>
          <maml:description>
            <maml:para>Set the working directory for the process to be started. The WorkingDirectory property must be set if Credential (UserName and Password) is provided.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-Process</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="FilePath">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Executable name or path to application which to start. Wildcard characters and relative paths are supported.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>ArgumentList</maml:name>
          <maml:description>
            <maml:para>A collection of command-line arguments to use when starting the application</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoNewWindow</maml:name>
          <maml:description>
            <maml:para>Whether to use the operating system shell to start the process</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>The amount of time, in milliseconds, to wait for the associated process to exit. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 10000 (10 seconds).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>10000</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Async</maml:name>
          <maml:description>
            <maml:para>If specified, reading process output is asynchronous. This functionality is experimental because current thread will block until timeout.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>If specified, process output is returned as string. By default process output is formatted and redirected to information and error stream.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>RunAsCredential</maml:name>
          <maml:description>
            <maml:para>Optionally specify Windows user name and password to use when starting the process.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>LoadUserProfile</maml:name>
          <maml:description>
            <maml:para>Specify whether the Windows user profile is to be loaded from the registry Because loading the profile can be time-consuming, it is best to use this value only if you must access the information in the HKEY_CURRENT_USER registry key. Requires RunAsCredential of the user to be specified.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkingDirectory</maml:name>
          <maml:description>
            <maml:para>Set the working directory for the process to be started. The WorkingDirectory property must be set if Credential (UserName and Password) is provided.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="FilePath">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Executable name or path to application which to start. Wildcard characters and relative paths are supported.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>ArgumentList</maml:name>
        <maml:description>
          <maml:para>A collection of command-line arguments to use when starting the application</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name on which to invoke process</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specify Credential used for authentication to Domain.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoNewWindow</maml:name>
        <maml:description>
          <maml:para>Whether to use the operating system shell to start the process</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>The amount of time, in milliseconds, to wait for the associated process to exit. Value 0 means an immediate return, and a value of -1 specifies an infinite wait. The default wait time is 10000 (10 seconds).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>10000</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Async</maml:name>
        <maml:description>
          <maml:para>If specified, reading process output is asynchronous. This functionality is experimental because current thread will block until timeout.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Raw</maml:name>
        <maml:description>
          <maml:para>If specified, process output is returned as string. By default process output is formatted and redirected to information and error stream.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>RunAsCredential</maml:name>
        <maml:description>
          <maml:para>Optionally specify Windows user name and password to use when starting the process.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>LoadUserProfile</maml:name>
        <maml:description>
          <maml:para>Specify whether the Windows user profile is to be loaded from the registry Because loading the profile can be time-consuming, it is best to use this value only if you must access the information in the HKEY_CURRENT_USER registry key. Requires RunAsCredential of the user to be specified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorkingDirectory</maml:name>
        <maml:description>
          <maml:para>Set the working directory for the process to be started. The WorkingDirectory property must be set if Credential (UserName and Password) is provided.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Invoke-Process</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[System.Threading.CancellationTokenSource]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[void]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Because of uncertain output this function needs a lot of improvements and a lot more test cases to handle variable varieties of process outputs. TODO: Domain parameter needed to invoke process remotely TODO: Process may need to read input TODO: NoNewWindow should be default TODO: To implement LiteralPath parameter, it must be done with parameter sets.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Invoke-Process git.exe -ArgumentList "status" -NoNewWindow -Wait 3000</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Invoke-Process gpupdate.exe -NoNewWindow -ArgumentList "/target:computer" -Async -Timeout 3000</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Invoke-Process.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Invoke-Process.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processstartinfo</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processstartinfo</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Out-DataTable</command:name>
      <command:verb>Out</command:verb>
      <command:noun>DataTable</command:noun>
      <maml:description>
        <maml:para>Creates a DataTable from an object</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Creates a DataTable based on an object's properties.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Out-DataTable</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>One or more objects to convert into a DataTable</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSObject[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSObject[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NonNullable</maml:name>
          <maml:description>
            <maml:para>A list of columns to set disable AllowDBNull on</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>@()</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>One or more objects to convert into a DataTable</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSObject[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NonNullable</maml:name>
        <maml:description>
          <maml:para>A list of columns to set disable AllowDBNull on</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>@()</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[PSObject[]] Any object can be piped to Out-DataTable</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[System.Data.DataTable]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Adapted from script by Marc van Orsouw and function from Chad Miller Version History v1.0  - Chad Miller - Initial Release v1.1  - Chad Miller - Fixed Issue with Properties v1.2  - Chad Miller - Added setting column datatype by property as suggested by emp0 v1.3  - Chad Miller - Corrected issue with setting datatype on empty properties v1.4  - Chad Miller - Corrected issue with DBNull v1.5  - Chad Miller - Updated example v1.6  - Chad Miller - Added column datatype logic with default to string v1.7  - Chad Miller - Fixed issue with IsArray v1.8  - ramblingcookiemonster - Removed if($Value) logic. This would not catch empty strings, zero, $false and other non-null items       - Added perhaps pointless error handling</maml:para>
        <maml:para>Modifications by metablaster January 2021: Updated formatting, casing and naming according to the rest of project Updated comment based help Convert inner function to scriptblock</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Get-PSDrive | Out-DataTable</dev:code>
        <dev:remarks>
          <maml:para>Creates a DataTable from the properties of Get-PSDrive</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Get-Process | Select-Object Name, CPU | Out-DataTable</dev:code>
        <dev:remarks>
          <maml:para>Get a list of processes and their CPU and create a datatable</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Out-DataTable.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Out-DataTable.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://github.com/RamblingCookieMonster/PowerShell</maml:linkText>
        <maml:uri>https://github.com/RamblingCookieMonster/PowerShell</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Resolve-FileSystemPath</command:name>
      <command:verb>Resolve</command:verb>
      <command:noun>FileSystemPath</command:noun>
      <maml:description>
        <maml:para>Resolve wildcard pattern and\or relative location of a directory or file location</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Ensure directory or file name wildcard pattern resolves to single location. Unlike Resolve-Path which accepts and produces paths supported by any PowerShell provider, this function accepts only file system paths, and produces either [System.IO.DirectoryInfo] or [System.IO.FileInfo] Also unlike Resolve-Path the resultant path object is returned even if target file system item does not exist, as long as portion of the specified path is resolved and as long as new path doesn't resolve to multiple (ambiguous) locations.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Resolve-FileSystemPath</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Directory or file location to target file system item. Wildcard characters and relative paths are supported.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>File</maml:name>
          <maml:description>
            <maml:para>If specified, [System.IO.FileInfo] object is created instead of [System.IO.DirectoryInfo]</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Create</maml:name>
          <maml:description>
            <maml:para>If specified, target directory or file is created if it doesn't exist</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Directory or file location to target file system item. Wildcard characters and relative paths are supported.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>File</maml:name>
        <maml:description>
          <maml:para>If specified, [System.IO.FileInfo] object is created instead of [System.IO.DirectoryInfo]</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Create</maml:name>
        <maml:description>
          <maml:para>If specified, target directory or file is created if it doesn't exist</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Resolve-FileSystemPath</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[System.IO.DirectoryInfo]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[System.IO.FileInfo]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: Implement -Relative parameter, see Resolve-Path</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Resolve-FileSystemPath "C:\Win\Sys?em3*"</dev:code>
        <dev:remarks>
          <maml:para>Resolves to "C:\Windows\System32" and returns System.IO.DirectoryInfo object</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Resolve-FileSystemPath "..\..\MyFile" -File -Create</dev:code>
        <dev:remarks>
          <maml:para>Creates file "MyFile" 2 directories back if it doesn't exist and returns System.IO.FileInfo object</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Resolve-FileSystemPath.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Select-EnvironmentVariable</command:name>
      <command:verb>Select</command:verb>
      <command:noun>EnvironmentVariable</command:noun>
      <maml:description>
        <maml:para>Select a group of system environment variables</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Select-EnvironmentVariable selects a specific or predefined group of system environment variables. This is useful to compare or verify environment variables such as path patterns or to select specific type of paths. For example, firewall rule for an applications will include the path to to said application, the path may contain system environment variable and we must ensure environment variable resolves to existing file system location that is fully qualified and does not lead to userprofile.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Select-EnvironmentVariable</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name from which to retrieve environment variables</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>From</maml:name>
          <maml:description>
            <maml:para>A named group of system environment variables to get as follows:</maml:para>
            <maml:para>- UserProfile: Any variables that lead to or mentions user profile</maml:para>
            <maml:para>- Whitelist: Variables that are allowed to be part of firewall rules</maml:para>
            <maml:para>- FullyQualified: Variables which are fully qualified paths</maml:para>
            <maml:para>- Rooted: Variables for any path that has root qualifier</maml:para>
            <maml:para>- FileSystem: Variables for valid paths on any of the local file system volume</maml:para>
            <maml:para>- Relative: Relative file system paths</maml:para>
            <maml:para>- BlackList: Variables that are not in any other group mentioned above</maml:para>
            <maml:para>- All: All system environment variables</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>All</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="named" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specify specific environment variable which to expand to value. If there is no such environment variable the result is null. Wildcard characters are supported.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Specify behavior of -Name or -Value parameters, for ex. -Name parameter gets values for environment variables that match -Name wildcard pattern, to instead get variable names specify -Property Name. Same applies to -Value parameter which gets variables for matches values.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeFile</maml:name>
          <maml:description>
            <maml:para>If specified, algorithm will include variables and/or their values that represent files, by default only directories are grouped and the rest is put into "blacklist" and "All" group.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, discards script scope cache and queries system for environment variables a new. By default variables are queried only once per session, each subsequent function call returns cached result.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Select-EnvironmentVariable</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name from which to retrieve environment variables</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>From</maml:name>
          <maml:description>
            <maml:para>A named group of system environment variables to get as follows:</maml:para>
            <maml:para>- UserProfile: Any variables that lead to or mentions user profile</maml:para>
            <maml:para>- Whitelist: Variables that are allowed to be part of firewall rules</maml:para>
            <maml:para>- FullyQualified: Variables which are fully qualified paths</maml:para>
            <maml:para>- Rooted: Variables for any path that has root qualifier</maml:para>
            <maml:para>- FileSystem: Variables for valid paths on any of the local file system volume</maml:para>
            <maml:para>- Relative: Relative file system paths</maml:para>
            <maml:para>- BlackList: Variables that are not in any other group mentioned above</maml:para>
            <maml:para>- All: All system environment variables</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>All</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="named" aliases="none">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>Get environment variable name for specified value if there is one. This is equivalent to serching environment variables that expand to specified value, the result may include multiple environment variables. Wildcard characters are supported.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Specify behavior of -Name or -Value parameters, for ex. -Name parameter gets values for environment variables that match -Name wildcard pattern, to instead get variable names specify -Property Name. Same applies to -Value parameter which gets variables for matches values.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Exact</maml:name>
          <maml:description>
            <maml:para>If specified, retrieved environment variable names are exact, meaning not surrounded with percentage '%' sign, ex: HOMEDRIVE instead of %HOMEDRIVE% If previous function call was not run with same "Exact" parameter value, then the script scope cache is updated by reformatting variable names, but the internal cache is not recreated.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeFile</maml:name>
          <maml:description>
            <maml:para>If specified, algorithm will include variables and/or their values that represent files, by default only directories are grouped and the rest is put into "blacklist" and "All" group.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, discards script scope cache and queries system for environment variables a new. By default variables are queried only once per session, each subsequent function call returns cached result.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Select-EnvironmentVariable</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Computer name from which to retrieve environment variables</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credential object to use for authentication</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Session</maml:name>
          <maml:description>
            <maml:para>Specifies the PS session to use</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>From</maml:name>
          <maml:description>
            <maml:para>A named group of system environment variables to get as follows:</maml:para>
            <maml:para>- UserProfile: Any variables that lead to or mentions user profile</maml:para>
            <maml:para>- Whitelist: Variables that are allowed to be part of firewall rules</maml:para>
            <maml:para>- FullyQualified: Variables which are fully qualified paths</maml:para>
            <maml:para>- Rooted: Variables for any path that has root qualifier</maml:para>
            <maml:para>- FileSystem: Variables for valid paths on any of the local file system volume</maml:para>
            <maml:para>- Relative: Relative file system paths</maml:para>
            <maml:para>- BlackList: Variables that are not in any other group mentioned above</maml:para>
            <maml:para>- All: All system environment variables</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>All</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Property</maml:name>
          <maml:description>
            <maml:para>Specify behavior of -Name or -Value parameters, for ex. -Name parameter gets values for environment variables that match -Name wildcard pattern, to instead get variable names specify -Property Name. Same applies to -Value parameter which gets variables for matches values.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Exact</maml:name>
          <maml:description>
            <maml:para>If specified, retrieved environment variable names are exact, meaning not surrounded with percentage '%' sign, ex: HOMEDRIVE instead of %HOMEDRIVE% If previous function call was not run with same "Exact" parameter value, then the script scope cache is updated by reformatting variable names, but the internal cache is not recreated.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>IncludeFile</maml:name>
          <maml:description>
            <maml:para>If specified, algorithm will include variables and/or their values that represent files, by default only directories are grouped and the rest is put into "blacklist" and "All" group.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, discards script scope cache and queries system for environment variables a new. By default variables are queried only once per session, each subsequent function call returns cached result.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Computer name from which to retrieve environment variables</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>[System.Environment]::MachineName</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credential object to use for authentication</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Session</maml:name>
        <maml:description>
          <maml:para>Specifies the PS session to use</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.Runspaces.PSSession</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.Runspaces.PSSession</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>From</maml:name>
        <maml:description>
          <maml:para>A named group of system environment variables to get as follows:</maml:para>
          <maml:para>- UserProfile: Any variables that lead to or mentions user profile</maml:para>
          <maml:para>- Whitelist: Variables that are allowed to be part of firewall rules</maml:para>
          <maml:para>- FullyQualified: Variables which are fully qualified paths</maml:para>
          <maml:para>- Rooted: Variables for any path that has root qualifier</maml:para>
          <maml:para>- FileSystem: Variables for valid paths on any of the local file system volume</maml:para>
          <maml:para>- Relative: Relative file system paths</maml:para>
          <maml:para>- BlackList: Variables that are not in any other group mentioned above</maml:para>
          <maml:para>- All: All system environment variables</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>All</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="named" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specify specific environment variable which to expand to value. If there is no such environment variable the result is null. Wildcard characters are supported.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="named" aliases="none">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>Get environment variable name for specified value if there is one. This is equivalent to serching environment variables that expand to specified value, the result may include multiple environment variables. Wildcard characters are supported.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Property</maml:name>
        <maml:description>
          <maml:para>Specify behavior of -Name or -Value parameters, for ex. -Name parameter gets values for environment variables that match -Name wildcard pattern, to instead get variable names specify -Property Name. Same applies to -Value parameter which gets variables for matches values.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Exact</maml:name>
        <maml:description>
          <maml:para>If specified, retrieved environment variable names are exact, meaning not surrounded with percentage '%' sign, ex: HOMEDRIVE instead of %HOMEDRIVE% If previous function call was not run with same "Exact" parameter value, then the script scope cache is updated by reformatting variable names, but the internal cache is not recreated.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>IncludeFile</maml:name>
        <maml:description>
          <maml:para>If specified, algorithm will include variables and/or their values that represent files, by default only directories are grouped and the rest is put into "blacklist" and "All" group.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>If specified, discards script scope cache and queries system for environment variables a new. By default variables are queried only once per session, each subsequent function call returns cached result.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Select-EnvironmentVariable</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[System.Collections.DictionaryEntry]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Fully Qualified Path Name (FQPN):</maml:para>
        <maml:para>- A UNC name of any format, which always start with two backslash characters ("\\"), ex: "\\server\share\path\file"</maml:para>
        <maml:para>- A disk designator with a backslash, for example "C:\" or "d:\".</maml:para>
        <maml:para>- A single backslash, for example, "\directory" or "\file.txt".</maml:para>
        <maml:para>This is also referred to as an absolute path.</maml:para>
        <maml:para>Relative path:</maml:para>
        <maml:para>If a file name begins with only a disk designator but not the backslash after the colon:</maml:para>
        <maml:para>- "C:tmp.txt" refers to a file named "tmp.txt" in the current directory on drive C</maml:para>
        <maml:para>- "C:tempdir\tmp.txt" refers to a file in a subdirectory to the current directory on drive C</maml:para>
        <maml:para></maml:para>
        <maml:para>A path is also said to be relative if it contains "double-dots":</maml:para>
        <maml:para>- "..\tmp.txt" specifies a file named tmp.txt located in the parent of the current directory.</maml:para>
        <maml:para>- "..\tmp.txt" specifies a file named tmp.txt located in the parent of the current directory.</maml:para>
        <maml:para></maml:para>
        <maml:para>Relative paths can combine both example types, for example "C:..\tmp.txt" Path+Filename limit is 260 characters.</maml:para>
        <maml:para>TODO: Need to see if UNC, single backslash and relative paths without a qualifier are valid for firewall, a new group 'Firewall' is needed since whitelist excludes some valid variables TODO: Implement -AsCustomObject that will give consistent output for formatting purposes TODO: Implement -Unique switch since some variable Values may be duplicates (with different name) TODO: Output should include domain name from which variables were retrieved HACK: Parameter set names for ComputerName vs Session</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Select-EnvironmentVariable -From UserProfile</dev:code>
        <dev:remarks>
          <maml:para>Name              Value %APPDATA%         C:\Users\SomeUser\AppData\Roaming %HOME%            C:\Users\SomeUser %HOMEPATH%        \Users\SomeUser %USERNAME%        SomeUser</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Select-EnvironmentVariable -Name *user* -Property Name -From WhiteList</dev:code>
        <dev:remarks>
          <maml:para>%ALLUSERSPROFILE%</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Select-EnvironmentVariable -Name "LOGONSERVER" -Force</dev:code>
        <dev:remarks>
          <maml:para>\\SERVERNAME</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>Select-EnvironmentVariable -Value "C:\Program Files"</dev:code>
        <dev:remarks>
          <maml:para>%ProgramFiles%</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>Select-EnvironmentVariable -From UserProfile -Property Name</dev:code>
        <dev:remarks>
          <maml:para>%APPDATA% %HOME% %HOMEPATH% %LOCALAPPDATA% %OneDrive% %TEMP% %TMP% %USERPROFILE%</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <dev:code>Select-EnvironmentVariable -From FullyQualified -Exact</dev:code>
        <dev:remarks>
          <maml:para>Name                       Value ----                       ----- ALLUSERSPROFILE            C:\ProgramData APPDATA                    C:\Users\SomeUser\AppData\Roaming CommonProgramFiles         C:\Program Files\Common Files CommonProgramFiles(x86)    C:\Program Files (x86)\Common Files CommonProgramW6432         C:\Program Files\Common Files DriverData                 C:\Windows\System32\Drivers\DriverData</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Select-EnvironmentVariable.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Select-EnvironmentVariable.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-NetworkProfile</command:name>
      <command:verb>Set</command:verb>
      <command:noun>NetworkProfile</command:noun>
      <maml:description>
        <maml:para>Set network profile on connected network interfaces</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Set network profile for each connected network interface. Recommended is "Public" profile for maximum security, unless "Private" is needed.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-NetworkProfile</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>NetworkCategory</maml:name>
          <maml:description>
            <maml:para>Specify network category which to apply to all NIC's. If not specified, you're prompted for each NIC individually</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>NetworkCategory</maml:name>
        <maml:description>
          <maml:para>Specify network category which to apply to all NIC's. If not specified, you're prompted for each NIC individually</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Set-NetworkProfile</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None. Set-NetworkProfile does not generate any output</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>HACK: It looks like option to change network profile in settings app will be gone after using this function in an elevated prompt</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Set-NetworkProfile</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Set-NetworkProfile.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Permission</command:name>
      <command:verb>Set</command:verb>
      <command:noun>Permission</command:noun>
      <maml:description>
        <maml:para>Take ownership or set permissions on file system or registry object</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Set-Permission sets permission or ownership of a filesystem or registry object such as file, folder, registry key or registry item.</maml:para>
      <maml:para>Set-Permission function is a wrapper around *-Acl commandlets for easier ACL editing. This function also serves as replacement for takeown.exe and icacls.exe whose syntax is arcane.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Permission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="LP">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Resource on which to set ownership or permissions. Valid resources are files, directories, registry keys and registry entries. Note that for registry key you must specify PowerShell provider path, ex: HKLM:\</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Owner</maml:name>
          <maml:description>
            <maml:para>Principal username who will be the new owner of a resource. Using this parameter means taking ownership of a resource.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Principal domain such as computer name or authority to which username applies</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>If specified, applies specified operations to all subobjects. This parameter is ignored for Leaf objects, such as files or registry entries.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, skips prompting for confirmation to perform recursive action</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Permission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="LP">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Resource on which to set ownership or permissions. Valid resources are files, directories, registry keys and registry entries. Note that for registry key you must specify PowerShell provider path, ex: HKLM:\</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>Principal username or group name to which to grant specified permissions. Using this parameter means setting permissions on a resource.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Principal domain such as computer name or authority to which username applies</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Access control type to either allow or deny specified rights</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Allow</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Deny</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.AccessControlType</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.AccessControlType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Allow</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Permission, Grant">
          <maml:name>Rights</maml:name>
          <maml:description>
            <maml:para>Defines file system access rights to use for principal when creating access and audit rules. The default includes: ReadAndExecute, ListDirectory and Traverse Where: 1. ReadAndExecute: Read and ExecuteFile 2. Read: ReadData, ReadExtendedAttributes, ReadAttributes, and ReadPermissions.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">ListDirectory</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ReadData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WriteData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CreateFiles</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CreateDirectories</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">AppendData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ReadExtendedAttributes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WriteExtendedAttributes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Traverse</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ExecuteFile</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DeleteSubdirectoriesAndFiles</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ReadAttributes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WriteAttributes</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Write</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ReadPermissions</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Read</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ReadAndExecute</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Modify</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ChangePermissions</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TakeOwnership</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Synchronize</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FullControl</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.FileSystemRights</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.FileSystemRights</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Inheritance</maml:name>
          <maml:description>
            <maml:para>Inheritance flags specify the semantics of inheritance for access control entries. This parameter is ignored for leaf objects, such as files or or registry entries. This parameter controls the "Applies to" column in advanced security dialog The default is "This folder, subfolders and files"</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ContainerInherit</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ObjectInherit</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.InheritanceFlags</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.InheritanceFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ContainerInherit, ObjectInherit</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Propagation</maml:name>
          <maml:description>
            <maml:para>Specifies how Access Control Entries (ACEs) are propagated to child objects. These flags are significant only if inheritance flags are present, (when Inheritance is not "None") This parameter is ignored for leaf objects, such as files or or registry entries. This parameter affects the "Applies to" column in advanced security dialog</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NoPropagateInherit</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">InheritOnly</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.PropagationFlags</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.PropagationFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Protected</maml:name>
          <maml:description>
            <maml:para>If set, protect the specified access rules from inheritance. The default is to allow inheritance. Protected access rules cannot be modified by parent objects through inheritance. This parameter controls the "Enable/Disable Inheritance" button in advanced security dialog</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PreserveInheritance</maml:name>
          <maml:description>
            <maml:para>If set, preserve inherited access rules, which become explicit rules. The default is to remove inherited access rules. This parameter is ignored if Protected is not set. This parameter controls choices offered after "Enable/Disable Inheritance" button.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>If specified, applies specified operations to all subobjects. This parameter is ignored for Leaf objects, such as files or registry entries.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reset</maml:name>
          <maml:description>
            <maml:para>If specified, removes all explicit access rules and keeps only inherited. if "Protected" parameter is specified inherited rules are removed as well. If "Protected" is specified with "PreserveInheritance", then the inherited rules become explicit rules and everything else is removed.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, skips prompting for confirmation to perform recursive action</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Permission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="LP">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Resource on which to set ownership or permissions. Valid resources are files, directories, registry keys and registry entries. Note that for registry key you must specify PowerShell provider path, ex: HKLM:\</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
          <maml:name>User</maml:name>
          <maml:description>
            <maml:para>Principal username or group name to which to grant specified permissions. Using this parameter means setting permissions on a resource.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Principal domain such as computer name or authority to which username applies</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Access control type to either allow or deny specified rights</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Allow</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Deny</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.AccessControlType</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.AccessControlType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Allow</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RegPermission, RegGrant">
          <maml:name>RegistryRights</maml:name>
          <maml:description>
            <maml:para>Defines registry access rights to use for principal when creating access and audit rules. The default includes: ReadKey Where, ReadKey: QueryValues, Notify, EnumerateSubKeys and ReadPermissions</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">QueryValues</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">SetValue</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CreateSubKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">EnumerateSubKeys</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Notify</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">CreateLink</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Delete</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ReadPermissions</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">WriteKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ExecuteKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ReadKey</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ChangePermissions</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">TakeOwnership</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">FullControl</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.RegistryRights</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.RegistryRights</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Inheritance</maml:name>
          <maml:description>
            <maml:para>Inheritance flags specify the semantics of inheritance for access control entries. This parameter is ignored for leaf objects, such as files or or registry entries. This parameter controls the "Applies to" column in advanced security dialog The default is "This folder, subfolders and files"</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ContainerInherit</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ObjectInherit</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.InheritanceFlags</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.InheritanceFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>ContainerInherit, ObjectInherit</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Propagation</maml:name>
          <maml:description>
            <maml:para>Specifies how Access Control Entries (ACEs) are propagated to child objects. These flags are significant only if inheritance flags are present, (when Inheritance is not "None") This parameter is ignored for leaf objects, such as files or or registry entries. This parameter affects the "Applies to" column in advanced security dialog</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">NoPropagateInherit</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">InheritOnly</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.PropagationFlags</command:parameterValue>
          <dev:type>
            <maml:name>System.Security.AccessControl.PropagationFlags</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Protected</maml:name>
          <maml:description>
            <maml:para>If set, protect the specified access rules from inheritance. The default is to allow inheritance. Protected access rules cannot be modified by parent objects through inheritance. This parameter controls the "Enable/Disable Inheritance" button in advanced security dialog</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PreserveInheritance</maml:name>
          <maml:description>
            <maml:para>If set, preserve inherited access rules, which become explicit rules. The default is to remove inherited access rules. This parameter is ignored if Protected is not set. This parameter controls choices offered after "Enable/Disable Inheritance" button.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>If specified, applies specified operations to all subobjects. This parameter is ignored for Leaf objects, such as files or registry entries.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reset</maml:name>
          <maml:description>
            <maml:para>If specified, removes all explicit access rules and keeps only inherited. if "Protected" parameter is specified inherited rules are removed as well. If "Protected" is specified with "PreserveInheritance", then the inherited rules become explicit rules and everything else is removed.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, skips prompting for confirmation to perform recursive action</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Permission</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="LP">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Resource on which to set ownership or permissions. Valid resources are files, directories, registry keys and registry entries. Note that for registry key you must specify PowerShell provider path, ex: HKLM:\</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>Principal domain such as computer name or authority to which username applies</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Protected</maml:name>
          <maml:description>
            <maml:para>If set, protect the specified access rules from inheritance. The default is to allow inheritance. Protected access rules cannot be modified by parent objects through inheritance. This parameter controls the "Enable/Disable Inheritance" button in advanced security dialog</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PreserveInheritance</maml:name>
          <maml:description>
            <maml:para>If set, preserve inherited access rules, which become explicit rules. The default is to remove inherited access rules. This parameter is ignored if Protected is not set. This parameter controls choices offered after "Enable/Disable Inheritance" button.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>If specified, applies specified operations to all subobjects. This parameter is ignored for Leaf objects, such as files or registry entries.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Reset</maml:name>
          <maml:description>
            <maml:para>If specified, removes all explicit access rules and keeps only inherited. if "Protected" parameter is specified inherited rules are removed as well. If "Protected" is specified with "PreserveInheritance", then the inherited rules become explicit rules and everything else is removed.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>If specified, skips prompting for confirmation to perform recursive action</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="LP">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Resource on which to set ownership or permissions. Valid resources are files, directories, registry keys and registry entries. Note that for registry key you must specify PowerShell provider path, ex: HKLM:\</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Owner</maml:name>
        <maml:description>
          <maml:para>Principal username who will be the new owner of a resource. Using this parameter means taking ownership of a resource.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UserName">
        <maml:name>User</maml:name>
        <maml:description>
          <maml:para>Principal username or group name to which to grant specified permissions. Using this parameter means setting permissions on a resource.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ComputerName, CN">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>Principal domain such as computer name or authority to which username applies</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>Access control type to either allow or deny specified rights</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.AccessControlType</command:parameterValue>
        <dev:type>
          <maml:name>System.Security.AccessControl.AccessControlType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Allow</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Permission, Grant">
        <maml:name>Rights</maml:name>
        <maml:description>
          <maml:para>Defines file system access rights to use for principal when creating access and audit rules. The default includes: ReadAndExecute, ListDirectory and Traverse Where: 1. ReadAndExecute: Read and ExecuteFile 2. Read: ReadData, ReadExtendedAttributes, ReadAttributes, and ReadPermissions.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.FileSystemRights</command:parameterValue>
        <dev:type>
          <maml:name>System.Security.AccessControl.FileSystemRights</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RegPermission, RegGrant">
        <maml:name>RegistryRights</maml:name>
        <maml:description>
          <maml:para>Defines registry access rights to use for principal when creating access and audit rules. The default includes: ReadKey Where, ReadKey: QueryValues, Notify, EnumerateSubKeys and ReadPermissions</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.RegistryRights</command:parameterValue>
        <dev:type>
          <maml:name>System.Security.AccessControl.RegistryRights</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Inheritance</maml:name>
        <maml:description>
          <maml:para>Inheritance flags specify the semantics of inheritance for access control entries. This parameter is ignored for leaf objects, such as files or or registry entries. This parameter controls the "Applies to" column in advanced security dialog The default is "This folder, subfolders and files"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.InheritanceFlags</command:parameterValue>
        <dev:type>
          <maml:name>System.Security.AccessControl.InheritanceFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>ContainerInherit, ObjectInherit</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Propagation</maml:name>
        <maml:description>
          <maml:para>Specifies how Access Control Entries (ACEs) are propagated to child objects. These flags are significant only if inheritance flags are present, (when Inheritance is not "None") This parameter is ignored for leaf objects, such as files or or registry entries. This parameter affects the "Applies to" column in advanced security dialog</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Security.AccessControl.PropagationFlags</command:parameterValue>
        <dev:type>
          <maml:name>System.Security.AccessControl.PropagationFlags</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Protected</maml:name>
        <maml:description>
          <maml:para>If set, protect the specified access rules from inheritance. The default is to allow inheritance. Protected access rules cannot be modified by parent objects through inheritance. This parameter controls the "Enable/Disable Inheritance" button in advanced security dialog</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PreserveInheritance</maml:name>
        <maml:description>
          <maml:para>If set, preserve inherited access rules, which become explicit rules. The default is to remove inherited access rules. This parameter is ignored if Protected is not set. This parameter controls choices offered after "Enable/Disable Inheritance" button.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>If specified, applies specified operations to all subobjects. This parameter is ignored for Leaf objects, such as files or registry entries.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Reset</maml:name>
        <maml:description>
          <maml:para>If specified, removes all explicit access rules and keeps only inherited. if "Protected" parameter is specified inherited rules are removed as well. If "Protected" is specified with "PreserveInheritance", then the inherited rules become explicit rules and everything else is removed.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>If specified, skips prompting for confirmation to perform recursive action</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Set-Permission</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[bool]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Set-Acl : Requested registry access is not allowed, unable to modify ownership happens because PowerShell process does not have high enough privileges even if run as Administrator, a fix for this is in Set-Privilege.ps1 which this function makes use of.</maml:para>
        <maml:para>TODO: Manage audit entries TODO: Which combination is for "Replace all child object permissions with inheritable permissions from this object" TODO: Which combination is for "Include inheritable permissions from this object's parent" TODO: See https://powershellexplained.com/2020-03-15-Powershell-shouldprocess-whatif-confirm-shouldcontinue-everything/ TODO: A switch to ignore errors and continue doing things, useful for recurse TODO: A bunch of other security options can be implemented</maml:para>
        <maml:para>Links listed below are provided for additional parameter description in order of how parameters are declared</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Set-Permission -User "SomeUser" -LiteralPath "D:\SomePath"</dev:code>
        <dev:remarks>
          <maml:para>Sets function defaults for user SomeUser on path D:\SomePath</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Set-Permission -User "Remote Management Users" -LiteralPath "D:\SomePath" -Protected</dev:code>
        <dev:remarks>
          <maml:para>Only "Remote Management Users" have permissions on "D:\SomePath", other entries are removed</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Set-Permission -User "LanmanServer" -Domain "NT SERVICE" -LiteralPath "D:\SomeFolder" `
    -Type "Deny" -Rights "TakeOwnership, Delete, Modify"</dev:code>
        <dev:remarks>
          <maml:para>LanmanServer service is denied specified rights for specified directory and all it's contents</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>Set-Permission -User SomeUser -Domain COMPUTERNAME -LiteralPath "D:\SomeFolder"</dev:code>
        <dev:remarks>
          <maml:para>Allows to ReadAndExecute, ListDirectory and Traverse to "SomeFolder" and it's contents for COMPUTERNAME\SomeUser</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>Set-Permission -User Administrators -LiteralPath "HKLM:\$RegPath" -RegistryRight ChangePermissions -Inheritance None</dev:code>
        <dev:remarks>
          <maml:para>Allows Administrators to change permissions on registry path, and the path does not inherit parent permissions</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Set-Permission.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Set-Permission.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.accesscontroltype?view=dotnet-plat-ext-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.accesscontroltype?view=dotnet-plat-ext-3.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.filesystemrights?view=dotnet-plat-ext-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.filesystemrights?view=dotnet-plat-ext-3.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.registryrights?view=dotnet-plat-ext-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.registryrights?view=dotnet-plat-ext-3.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.inheritanceflags?view=dotnet-plat-ext-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.inheritanceflags?view=dotnet-plat-ext-3.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.propagationflags?view=dotnet-plat-ext-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.propagationflags?view=dotnet-plat-ext-3.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.objectsecurity.setaccessruleprotection?view=dotnet-plat-ext-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.objectsecurity.setaccessruleprotection?view=dotnet-plat-ext-3.1</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.registrysecurity?view=dotnet-plat-ext-3.1</maml:linkText>
        <maml:uri>https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.registrysecurity?view=dotnet-plat-ext-3.1</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-ScreenBuffer</command:name>
      <command:verb>Set</command:verb>
      <command:noun>ScreenBuffer</command:noun>
      <maml:description>
        <maml:para>Set vertical screen buffer to recommended value</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Set-ScreenBuffer sets screenbuffer for current powershell session. In some cases, depending on project settings a user might need larger buffer to preserve all the output in the console for review and scroll back.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-ScreenBuffer</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Height</maml:name>
          <maml:description>
            <maml:para>New screen buffer height</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.UInt32</command:parameterValue>
          <dev:type>
            <maml:name>System.UInt32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>3000</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Height</maml:name>
        <maml:description>
          <maml:para>New screen buffer height</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.UInt32</command:parameterValue>
        <dev:type>
          <maml:name>System.UInt32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>3000</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Set-ScreenBuffer</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None. Set-ScreenBuffer does not generate any output</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: A parameter to restore previous value may be useful</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Set-ScreenBuffer</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Set-ScreenBuffer.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Set-ScreenBuffer.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.host.pshostrawuserinterface</maml:linkText>
        <maml:uri>https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.host.pshostrawuserinterface</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Shortcut</command:name>
      <command:verb>Set</command:verb>
      <command:noun>Shortcut</command:noun>
      <maml:description>
        <maml:para>Set desktop or online shortcut</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Create or set shortcut to file or online location. Optionally set shortcut properties such as the icon, hotkey or description.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Shortcut</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of a schortcut file, optionally with an extension. Use the .lnk extension for a file system shortcut. Use the .url extension for an Internet shortcut.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>The full path (excluding file name) to location of the shortcut file you want to create. Alternatively one of the following keywords can be specified: "AllUsersDesktop" "AllUsersStartMenu" "AllUsersPrograms" "AllUsersStartup" "Desktop" "Favorites" "Fonts" "MyDocuments" "NetHood" "PrintHood" "Programs" "Recent" "SendTo" "StartMenu" "Startup" "Templates"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Source">
          <maml:name>TargetPath</maml:name>
          <maml:description>
            <maml:para>The full path and filename of a location that the shortcut file will open.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.FileInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.FileInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Icon">
          <maml:name>IconLocation</maml:name>
          <maml:description>
            <maml:para>Full pathname of the icon file to set on shortcut.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.FileInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.FileInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Index">
          <maml:name>IconIndex</maml:name>
          <maml:description>
            <maml:para>Index is the position of the icon within the file (where the first icon is 0)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specify description of the shortcut</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Hotkey</maml:name>
          <maml:description>
            <maml:para>A string value of the form "Modifier + Keyname", where Modifier is any combination of Alt, Ctrl, and Shift, and Keyname is one of A through Z or 0 through 12.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WindowStyle</maml:name>
          <maml:description>
            <maml:para>Specify how the application window will appear</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>WorkingDirectory</maml:name>
          <maml:description>
            <maml:para>Sets the path of the shortcut's working directory</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.DirectoryInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ArgumentList">
          <maml:name>Arguments</maml:name>
          <maml:description>
            <maml:para>Optionally set arguments to target file</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Admin</maml:name>
          <maml:description>
            <maml:para>If specified, the shortcut is run as Administrator</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Shortcut</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of a schortcut file, optionally with an extension. Use the .lnk extension for a file system shortcut. Use the .url extension for an Internet shortcut.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>The full path (excluding file name) to location of the shortcut file you want to create. Alternatively one of the following keywords can be specified: "AllUsersDesktop" "AllUsersStartMenu" "AllUsersPrograms" "AllUsersStartup" "Desktop" "Favorites" "Fonts" "MyDocuments" "NetHood" "PrintHood" "Programs" "Recent" "SendTo" "StartMenu" "Startup" "Templates"</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Link">
          <maml:name>URL</maml:name>
          <maml:description>
            <maml:para>URL of the location that the shortcut file will open.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Icon">
          <maml:name>IconLocation</maml:name>
          <maml:description>
            <maml:para>Full pathname of the icon file to set on shortcut.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.FileInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.FileInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Index">
          <maml:name>IconIndex</maml:name>
          <maml:description>
            <maml:para>Index is the position of the icon within the file (where the first icon is 0)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Hotkey</maml:name>
          <maml:description>
            <maml:para>A string value of the form "Modifier + Keyname", where Modifier is any combination of Alt, Ctrl, and Shift, and Keyname is one of A through Z or 0 through 12.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of a schortcut file, optionally with an extension. Use the .lnk extension for a file system shortcut. Use the .url extension for an Internet shortcut.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>The full path (excluding file name) to location of the shortcut file you want to create. Alternatively one of the following keywords can be specified: "AllUsersDesktop" "AllUsersStartMenu" "AllUsersPrograms" "AllUsersStartup" "Desktop" "Favorites" "Fonts" "MyDocuments" "NetHood" "PrintHood" "Programs" "Recent" "SendTo" "StartMenu" "Startup" "Templates"</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Source">
        <maml:name>TargetPath</maml:name>
        <maml:description>
          <maml:para>The full path and filename of a location that the shortcut file will open.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.FileInfo</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Link">
        <maml:name>URL</maml:name>
        <maml:description>
          <maml:para>URL of the location that the shortcut file will open.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Icon">
        <maml:name>IconLocation</maml:name>
        <maml:description>
          <maml:para>Full pathname of the icon file to set on shortcut.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.FileInfo</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Index">
        <maml:name>IconIndex</maml:name>
        <maml:description>
          <maml:para>Index is the position of the icon within the file (where the first icon is 0)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>Specify description of the shortcut</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Hotkey</maml:name>
        <maml:description>
          <maml:para>A string value of the form "Modifier + Keyname", where Modifier is any combination of Alt, Ctrl, and Shift, and Keyname is one of A through Z or 0 through 12.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WindowStyle</maml:name>
        <maml:description>
          <maml:para>Specify how the application window will appear</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>WorkingDirectory</maml:name>
        <maml:description>
          <maml:para>Sets the path of the shortcut's working directory</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.DirectoryInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ArgumentList">
        <maml:name>Arguments</maml:name>
        <maml:description>
          <maml:para>Optionally set arguments to target file</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Admin</maml:name>
        <maml:description>
          <maml:para>If specified, the shortcut is run as Administrator</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Set-Shortcut</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None. Set-Shortcut does not generate any output</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>None.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Set-Shortcut -Path "$env:Home\Desktop\test.lnk" -TargetPath "C:\Windows\program.exe"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Set-Shortcut -Path "$env:Home\Desktop\test.lnk" -TargetPath "C:\Windows\program.exe" -Admin -Index 16</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Set-Shortcut.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-ColorMessage</command:name>
      <command:verb>Write</command:verb>
      <command:noun>ColorMessage</command:noun>
      <maml:description>
        <maml:para>Write a colored output</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Write-ColorMessage writes colored output, which let's you avoid using Write-Host to avoid having to suppress code analysis warnings with PSScriptAnalyzer.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-ColorMessage</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="InputObject">
          <maml:name>Message</maml:name>
          <maml:description>
            <maml:para>An object such as test which is to be printed or outputted in color</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>ForegroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies foreground color</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.ConsoleColor</command:parameterValue>
          <dev:type>
            <maml:name>System.ConsoleColor</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>BackgroundColor</maml:name>
          <maml:description>
            <maml:para>Specifies background color</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Black</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkBlue</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGreen</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkCyan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkRed</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkMagenta</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkYellow</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Gray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">DarkGray</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Blue</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Green</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Cyan</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Red</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Magenta</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yellow</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">White</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.ConsoleColor</command:parameterValue>
          <dev:type>
            <maml:name>System.ConsoleColor</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="InputObject">
        <maml:name>Message</maml:name>
        <maml:description>
          <maml:para>An object such as test which is to be printed or outputted in color</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>ForegroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies foreground color</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>System.ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>BackgroundColor</maml:name>
        <maml:description>
          <maml:para>Specifies background color</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.ConsoleColor</command:parameterValue>
        <dev:type>
          <maml:name>System.ConsoleColor</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>HACK: Should be possible for input object to be any object not just string, but it works unexpectedly depending on PS edition used.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Write-ColorMessage sample_text Green</dev:code>
        <dev:remarks>
          <maml:para>sample_text (in green)</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Write-ColorMessage sample_text Red -BackGroundColor White</dev:code>
        <dev:remarks>
          <maml:para>sample_text (in red with white background)</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Write-ColorMessage.md</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Write-ColorMessage.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://learn.microsoft.com/en-us/dotnet/api/system.consolecolor</maml:linkText>
        <maml:uri>https://learn.microsoft.com/en-us/dotnet/api/system.consolecolor</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.host.pshost</maml:linkText>
        <maml:uri>https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.host.pshost</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-ServiceList</command:name>
      <command:verb>Write</command:verb>
      <command:noun>ServiceList</command:noun>
      <maml:description>
        <maml:para>Build a list of windows services involved in script rules</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Scan all scripts in this repository and get windows service names involved in firewall rules. The result is saved to file and used to verify existence and digital signature of these services on target system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-ServiceList</maml:name>
        <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Root folder name which to scan recursively</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.DirectoryInfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Log</maml:name>
          <maml:description>
            <maml:para>If specified, the list of services is also logged.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Root folder name which to scan recursively</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.DirectoryInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Log</maml:name>
        <maml:description>
          <maml:para>If specified, the list of services is also logged.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None. You cannot pipe objects to Write-ServiceList</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string]</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>TODO: -Log parameter should be accompanied with -LogName parameter</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Write-ServiceList "C:\PathToRepo"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Write-ServiceList "C:\PathToRepo" -Log</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/metablaster/WindowsFirewallRuleset/blob/master/Modules/Ruleset.Utility/Help/en-US/Write-ServiceList.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>